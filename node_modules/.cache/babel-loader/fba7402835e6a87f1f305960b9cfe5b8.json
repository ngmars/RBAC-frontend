{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nitish/Desktop/rbac/React-app/rbac-front/src/Containers/Dashboard/ViewOrg/ViewOrg.js\",\n    _s = $RefreshSig$();\n\nimport * as actions from '../../../Store/Actions/Index';\nimport { Redirect } from 'react-router-dom';\nimport Navbar from '../../../Components/Navbar/Navbar';\nimport Sidebar from '../../../Components/Sidebar/Sidebar';\nimport React, { Component, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport FormData from 'form-data';\n\nconst ViewOrgs = props => {\n  _s();\n\n  const [gotOrganizations, setGotOrganizations] = useState([]);\n  useEffect(() => {\n    props.onFetchOrganizations();\n  }, []);\n\n  let sidebar = /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 19\n  }, this);\n\n  let navbar = /*#__PURE__*/_jsxDEV(Navbar, {\n    name: localStorage.getItem('name')\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 19\n  }, this);\n\n  if (!props.loading) {\n    let organizationsArr = props.organizations.organizations;\n\n    for (let i = 0; i < organizationsArr.length; i++) {\n      console.log(i);\n      setGotOrganizations.push({\n        name: organizationsArr[i].name,\n        owner: organizationsArr[i].owner,\n        OrgId: organizationsArr[i].id\n      });\n      console.log('EVENT NAME', gotOrganizations);\n    }\n\n    events = state.eventNameArr.map(event => /*#__PURE__*/_jsxDEV(\"button\", {\n      name: \"componentButton\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6 col-lg-4 col-xl-3\",\n        children: /*#__PURE__*/_jsxDEV(\"figure\", {\n          className: \"snip1527\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: require(\"./new_img.jpg\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"figcaption\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"date\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"day\",\n                children: \"GO\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"month\",\n                children: \"FUND!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 68\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"NAME: \", event.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"OWNER: \", event.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Organization ID :\", event.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"myfunds\",\n    children: [navbar, sidebar]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ViewOrgs, \"30un+4rQpRhxjskMKtqHe1oSoyY=\");\n\n_c = ViewOrgs;\n\nconst mapAllOrganizationsDispatchToProps = dispatch => {\n  return {\n    onFetchOrganizations: () => dispatch(actions.fetchOrganizations()) //onFetchOneEvents:(OrganizationId)=>dispatch(actions.fetchOneOrganizations(fundId))\n\n  };\n}; //to access the errors and loading state \n\n\nconst mapStatetoProps = state => {\n  console.log('main page vworg', state);\n  return {\n    organizations: state.organizations.organizations,\n    loading: state.organizations.loading,\n    token: state.auth.token\n  };\n};\n\nexport default connect(mapStatetoProps, mapAllOrganizationsDispatchToProps)(ViewOrgs);\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewOrgs\");","map":{"version":3,"sources":["/Users/nitish/Desktop/rbac/React-app/rbac-front/src/Containers/Dashboard/ViewOrg/ViewOrg.js"],"names":["actions","Redirect","Navbar","Sidebar","React","Component","useState","useEffect","connect","FormData","ViewOrgs","props","gotOrganizations","setGotOrganizations","onFetchOrganizations","sidebar","navbar","localStorage","getItem","loading","organizationsArr","organizations","i","length","console","log","push","name","owner","OrgId","id","events","state","eventNameArr","map","event","require","mapAllOrganizationsDispatchToProps","dispatch","fetchOrganizations","mapStatetoProps","token","auth"],"mappings":"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","sourcesContent":["import * as actions from '../../../Store/Actions/Index'; \nimport {Redirect} from 'react-router-dom';\nimport Navbar from '../../../Components/Navbar/Navbar';\nimport Sidebar from '../../../Components/Sidebar/Sidebar';\nimport React, { Component, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport FormData from 'form-data'; \n\nconst ViewOrgs = props =>{\n    const[gotOrganizations, setGotOrganizations] = useState([])\n    useEffect (()=>{\n\n    \n        props.onFetchOrganizations();\n    },[]);\n    \n    \n    let sidebar = <Sidebar/>;\n    let navbar =  <Navbar name ={localStorage.getItem('name')}/>;\n    \n    if ( !props.loading ) {\n        let organizationsArr= props.organizations.organizations;\n        for (let i=0;i<organizationsArr.length;i++){\n            console.log(i);\n            setGotOrganizations.push({\n                name: organizationsArr[i].name,\n                owner: organizationsArr[i].owner,\n                OrgId: organizationsArr[i].id\n            });\n         console.log('EVENT NAME',gotOrganizations) \n        }\n    \n    events = state.eventNameArr.map( event => (\n        <button name=\"componentButton\" >\n        <div className=\"col-md-6 col-lg-4 col-xl-3\">\n          <figure className=\"snip1527\" >\n            <div className=\"image\"><img src={require(\"./new_img.jpg\")}/></div>\n            <figcaption>\n              <div className=\"date\"><span className=\"day\">GO</span><span className=\"month\">FUND!</span></div>\n              <h3>NAME: {event.name}</h3>\n              <h3>OWNER: {event.name}</h3>\n              <h3>Organization ID :{event.name}</h3>\n            </figcaption>\n            <a ></a>\n          </figure>\n        </div>\n        </button>\n        ))\n    }\n    return(\n        <div className=\"myfunds\">\n            {navbar}\n            {sidebar}\n        </div>\n\n    )\n\n   \n    \n    \n}\nconst mapAllOrganizationsDispatchToProps =dispatch => {\n  \n    return{\n        onFetchOrganizations:() =>dispatch(actions.fetchOrganizations()),\n        //onFetchOneEvents:(OrganizationId)=>dispatch(actions.fetchOneOrganizations(fundId))\n    };\n}\n\n\n//to access the errors and loading state \nconst mapStatetoProps = state =>{\n    console.log('main page vworg',state)\n    return {\n    organizations: state.organizations.organizations,\n    loading:state.organizations.loading,\n    token:state.auth.token\n    };\n};\n\n\nexport default connect(mapStatetoProps, mapAllOrganizationsDispatchToProps)(ViewOrgs);\n"]},"metadata":{},"sourceType":"module"}