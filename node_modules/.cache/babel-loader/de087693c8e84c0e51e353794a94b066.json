{"ast":null,"code":"import * as actionTypes from '../Actions/ActionTypes/actionTypesAllOrganization';\nimport { updateObject } from '../utils';\nconst initialState = {\n  organization: [],\n  loading: false\n};\n\nconst fetchOrganizationsStart = (state, action) => {\n  console.log(\"IT HAS STARTEDDD\");\n  return updateObject(state, {});\n};\n\nconst fetchOrganizationsSuccess = (state, action) => {\n  console.log('SUCCESSSSS', action.organizations);\n  return updateObject(state, {\n    organizations: action.organizations,\n    loading: false\n  });\n};\n\nconst fetchOrganizationsFail = (state, action) => {\n  return updateObject(state, {\n    loading: false\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.FETCH_ORGANIZATIONS_START:\n      return fetchOrganizationsStart(state, action);\n\n    case actionTypes.FETCH_ORGANIZATIONS_SUCCESS:\n      return fetchOrganizationsSuccess(state, action);\n\n    case actionTypes.FETCH_ORGANIZATIONS_FAILED:\n      return fetchOrganizationsFail(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/nitish/Desktop/rbac/React-app/rbac-front/src/Store/Reducers/allOrganizations.js"],"names":["actionTypes","updateObject","initialState","organization","loading","fetchOrganizationsStart","state","action","console","log","fetchOrganizationsSuccess","organizations","fetchOrganizationsFail","reducer","type","FETCH_ORGANIZATIONS_START","FETCH_ORGANIZATIONS_SUCCESS","FETCH_ORGANIZATIONS_FAILED"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,mDAA7B;AACA,SAASC,YAAT,QAA6B,UAA7B;AACA,MAAMC,YAAY,GAAC;AACfC,EAAAA,YAAY,EAAC,EADE;AAEfC,EAAAA,OAAO,EAAC;AAFO,CAAnB;;AAKA,MAAMC,uBAAuB,GAAG,CAAEC,KAAF,EAASC,MAAT,KAAqB;AACjDC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,SAAOR,YAAY,CAAEK,KAAF,EAAS,EAAT,CAAnB;AACH,CAHD;;AAKA,MAAMI,yBAAyB,GAAG,CAAEJ,KAAF,EAASC,MAAT,KAAqB;AACnDC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBF,MAAM,CAACI,aAAhC;AACA,SAAOV,YAAY,CAAEK,KAAF,EAAS;AACxBK,IAAAA,aAAa,EAACJ,MAAM,CAACI,aADG;AAExBP,IAAAA,OAAO,EAAE;AAFe,GAAT,CAAnB;AAKH,CAPD;;AASA,MAAMQ,sBAAsB,GAAG,CAAEN,KAAF,EAASC,MAAT,KAAqB;AAChD,SAAON,YAAY,CAAEK,KAAF,EAAS;AAAEF,IAAAA,OAAO,EAAE;AAAX,GAAT,CAAnB;AACH,CAFD;;AAIA,MAAMS,OAAO,GAAE,CAACP,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAiC;AAC5C,UAAOA,MAAM,CAACO,IAAd;AACI,SAAKd,WAAW,CAACe,yBAAjB;AAA4C,aAAOV,uBAAuB,CAAEC,KAAF,EAASC,MAAT,CAA9B;;AAC5C,SAAKP,WAAW,CAACgB,2BAAjB;AAA8C,aAAON,yBAAyB,CAAEJ,KAAF,EAASC,MAAT,CAAhC;;AAC9C,SAAKP,WAAW,CAACiB,0BAAjB;AAA6C,aAAOL,sBAAsB,CAAEN,KAAF,EAASC,MAAT,CAA7B;;AAC7C;AAAS,aAAOD,KAAP;AAJb;AAMH,CAPD;;AAQA,eAAeO,OAAf","sourcesContent":["import * as actionTypes from '../Actions/ActionTypes/actionTypesAllOrganization';\nimport { updateObject } from '../utils';\nconst initialState={\n    organization:[],\n    loading:false,\n}\n\nconst fetchOrganizationsStart = ( state, action ) => {\n    console.log(\"IT HAS STARTEDDD\");\n    return updateObject( state, {} );\n};\n\nconst fetchOrganizationsSuccess = ( state, action ) => {\n    console.log('SUCCESSSSS',action.organizations);\n    return updateObject( state, {\n        organizations:action.organizations,\n        loading: false\n    } );\n   \n};\n\nconst fetchOrganizationsFail = ( state, action ) => {\n    return updateObject( state, { loading: false } );\n};\n\nconst reducer =(state = initialState, action )=>{\n    switch(action.type){\n        case actionTypes.FETCH_ORGANIZATIONS_START: return fetchOrganizationsStart( state, action );\n        case actionTypes.FETCH_ORGANIZATIONS_SUCCESS: return fetchOrganizationsSuccess( state, action );\n        case actionTypes.FETCH_ORGANIZATIONS_FAILED: return fetchOrganizationsFail( state, action );\n        default: return state;\n    }\n}\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}