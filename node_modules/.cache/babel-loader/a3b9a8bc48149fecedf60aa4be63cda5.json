{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nitish/Desktop/rbac/React-app/rbac-front/src/Containers/Dashboard/CreateRole/CreateRole.js\",\n    _s = $RefreshSig$();\n\nimport * as actions from '../../../Store/Actions/Index';\nimport { Redirect } from 'react-router-dom';\nimport Input from '../../../Components/UI/Input/input';\nimport Navbar from '../../../Components/Navbar/Navbar';\nimport Sidebar from '../../../Components/Sidebar/Sidebar';\nimport React, { Component, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport FormData from 'form-data';\nimport OneRole from '../../../Components/OneRole/OneRole';\nimport classes from './CreateRole.css';\n\nconst CreateRole = props => {\n  _s();\n\n  useEffect(() => {\n    let token = localStorage.getItem('token');\n    props.onFetchOrganizations(token);\n  }, []);\n\n  let sidebar = /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 19\n  }, this);\n\n  let navbar = /*#__PURE__*/_jsxDEV(Navbar, {\n    name: localStorage.getItem('name')\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 19\n  }, this);\n\n  let count = 0;\n\n  let form = /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 16\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [navbar, sidebar, /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"CrtOrgForm\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"SUBMIT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateRole, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = CreateRole;\n\nconst mapAllOrganizationsDispatchToProps = dispatch => {\n  return {\n    onFetchOrganizations: token => dispatch(actions.fetchOrganizations(token)),\n    onCreateOrg: (name, email, owner, users, permissions_loaded, token) => dispatch(actions.createOrg(name, email, owner, users, permissions_loaded, token))\n  };\n}; //to access the errors and loading state \n\n\nconst mapStatetoProps = state => {\n  console.log('main page crtorg', state);\n  return {\n    AllUsers: state.AllUsers.AllUsers,\n    loading: state.AllUsers.loading,\n    token: state.auth.token\n  };\n};\n\nexport default connect(mapStatetoProps, mapAllOrganizationsDispatchToProps)(CreateRole);\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateRole\");","map":{"version":3,"sources":["/Users/nitish/Desktop/rbac/React-app/rbac-front/src/Containers/Dashboard/CreateRole/CreateRole.js"],"names":["actions","Redirect","Input","Navbar","Sidebar","React","Component","useState","useEffect","connect","FormData","OneRole","classes","CreateRole","props","token","localStorage","getItem","onFetchOrganizations","sidebar","navbar","count","form","mapAllOrganizationsDispatchToProps","dispatch","fetchOrganizations","onCreateOrg","name","email","owner","users","permissions_loaded","createOrg","mapStatetoProps","state","console","log","AllUsers","loading","auth"],"mappings":";;;;;AAAA,OAAO,KAAKA,OAAZ,MAAyB,8BAAzB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,OAAOC,KAAP,MAAkB,oCAAlB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,OAAP,MAAoB,qCAApB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,OAAP,MAAoB,qCAApB;AACA,OAAOC,OAAP,MAAoB,kBAApB;;AACA,MAAMC,UAAU,GAAGC,KAAK,IAAG;AAAA;;AACvBN,EAAAA,SAAS,CAAE,MAAI;AACX,QAAIO,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AACAH,IAAAA,KAAK,CAACI,oBAAN,CAA2BH,KAA3B;AACH,GAHQ,EAGP,EAHO,CAAT;;AAIA,MAAII,OAAO,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAAd;;AACA,MAAIC,MAAM,gBAAI,QAAC,MAAD;AAAQ,IAAA,IAAI,EAAGJ,YAAY,CAACC,OAAb,CAAqB,MAArB;AAAf;AAAA;AAAA;AAAA;AAAA,UAAd;;AACA,MAAII,KAAK,GAAG,CAAZ;;AACA,MAAIC,IAAI,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAAX;;AAEA,sBACI;AAAA,eACKF,MADL,EAEKD,OAFL,eAGI;AAAM,MAAA,SAAS,EAAC,YAAhB;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASC,CAnBL;;GAAMN,U;;KAAAA,U;;AAuBN,MAAMU,kCAAkC,GAAEC,QAAQ,IAAI;AAElD,SAAM;AACFN,IAAAA,oBAAoB,EAAEH,KAAD,IAAUS,QAAQ,CAACxB,OAAO,CAACyB,kBAAR,CAA2BV,KAA3B,CAAD,CADrC;AAEFW,IAAAA,WAAW,EAAC,CAACC,IAAD,EAAMC,KAAN,EAAYC,KAAZ,EAAkBC,KAAlB,EAAwBC,kBAAxB,EAA2ChB,KAA3C,KAAmDS,QAAQ,CAACxB,OAAO,CAACgC,SAAR,CAAkBL,IAAlB,EAAuBC,KAAvB,EAA6BC,KAA7B,EAAmCC,KAAnC,EAAyCC,kBAAzC,EAA4DhB,KAA5D,CAAD;AAFrE,GAAN;AAIH,CAND,C,CASA;;;AACA,MAAMkB,eAAe,GAAGC,KAAK,IAAG;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAA+BF,KAA/B;AACA,SAAO;AACPG,IAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeA,QADlB;AAEPC,IAAAA,OAAO,EAACJ,KAAK,CAACG,QAAN,CAAeC,OAFhB;AAGPvB,IAAAA,KAAK,EAACmB,KAAK,CAACK,IAAN,CAAWxB;AAHV,GAAP;AAKH,CAPD;;AAUA,eAAeN,OAAO,CAACwB,eAAD,EAAkBV,kCAAlB,CAAP,CAA6DV,UAA7D,CAAf","sourcesContent":["import * as actions from '../../../Store/Actions/Index'; \nimport {Redirect} from 'react-router-dom';\nimport Input from '../../../Components/UI/Input/input';\nimport Navbar from '../../../Components/Navbar/Navbar';\nimport Sidebar from '../../../Components/Sidebar/Sidebar';\nimport React, { Component, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport FormData from 'form-data'; \nimport OneRole from '../../../Components/OneRole/OneRole';\nimport classes from './CreateRole.css';\nconst CreateRole = props =>{\n    useEffect (()=>{\n        let token = localStorage.getItem('token')\n        props.onFetchOrganizations(token);\n    },[]);\n    let sidebar = <Sidebar/>;\n    let navbar =  <Navbar name ={localStorage.getItem('name')}/>;\n    let count = 0;\n    let form=  <Sidebar/>;\n    \n    return(\n        <div>\n            {navbar}\n            {sidebar}\n            <form className=\"CrtOrgForm\" >\n                <button >SUBMIT</button>\n            </form>\n    </div>)\n\n    }\n    \n    \n\nconst mapAllOrganizationsDispatchToProps =dispatch => {\n  \n    return{\n        onFetchOrganizations:(token) =>dispatch(actions.fetchOrganizations(token)),\n        onCreateOrg:(name,email,owner,users,permissions_loaded,token)=>dispatch(actions.createOrg(name,email,owner,users,permissions_loaded,token))\n    };\n}\n\n\n//to access the errors and loading state \nconst mapStatetoProps = state =>{\n    console.log('main page crtorg',state)\n    return {\n    AllUsers: state.AllUsers.AllUsers,\n    loading:state.AllUsers.loading,\n    token:state.auth.token\n    };\n};\n\n\nexport default connect(mapStatetoProps, mapAllOrganizationsDispatchToProps)(CreateRole);\n"]},"metadata":{},"sourceType":"module"}