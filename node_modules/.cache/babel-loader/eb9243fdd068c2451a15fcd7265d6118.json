{"ast":null,"code":"//TO GET ALL ORGANIZATIONS\nimport * as actionTypes from './ActionTypes/actionTypesAllRoles';\nimport axios from 'axios';\nexport const fetchAllRoleSuccess = AllRoles => {\n  return {\n    type: actionTypes.ALL_ROLES_GET_SUCCESS,\n    AllRoles: AllRoles\n  };\n};\nexport const fetchAllRoleFail = error => {\n  return {\n    type: actionTypes.ALL_ROLES_GET_FAILED,\n    error: error\n  };\n};\nexport const fetchAllRoleStart = () => {\n  return {\n    type: actionTypes.ALL_ROLES_GET_START\n  };\n};\nexport const fetchAllRole = token => {\n  return dispatch => {\n    dispatch(fetchOrgRoleStart());\n    console.log('GOT DATA');\n    let config = {\n      headers: {\n        'Authorization': 'Token ' + token\n      }\n    };\n    axios.get('http://localhost:8000/router/getrole/', config).then(res => {\n      console.log(\"NEWWW RESPONSE\", res.data);\n      const fetchedRoles = [];\n      /*\n                      for ( let key in res.data) {\n                          //console.log(res.data.fundraiser[key],key)\n                          fetchedRoles.push( {\n                              ...res.data[key],\n                              id: key\n                          } );\n                      }\n                  dispatch(fetchOrgRoleSuccess(fetchedRoles));\n                  console.log(\"FETCHED EVENTS\",fetchedRoles); */\n    }).catch(err => {\n      dispatch(fetchAllRoleFail(err));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/nitish/Desktop/rbac/React-app/rbac-front/src/Store/Actions/getAllRoles.js"],"names":["actionTypes","axios","fetchAllRoleSuccess","AllRoles","type","ALL_ROLES_GET_SUCCESS","fetchAllRoleFail","error","ALL_ROLES_GET_FAILED","fetchAllRoleStart","ALL_ROLES_GET_START","fetchAllRole","token","dispatch","fetchOrgRoleStart","console","log","config","headers","get","then","res","data","fetchedRoles","catch","err"],"mappings":"AAAA;AACA,OAAO,KAAKA,WAAZ,MAA6B,mCAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,mBAAmB,GAAGC,QAAD,IAAa;AAC3C,SAAO;AACHC,IAAAA,IAAI,EAAEJ,WAAW,CAACK,qBADf;AAEHF,IAAAA,QAAQ,EAAEA;AAFP,GAAP;AAIH,CALM;AAOP,OAAO,MAAMG,gBAAgB,GAAGC,KAAD,IAAU;AACrC,SAAO;AACHH,IAAAA,IAAI,EAAEJ,WAAW,CAACQ,oBADf;AAEHD,IAAAA,KAAK,EAACA;AAFH,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,iBAAiB,GAAE,MAAI;AAChC,SAAO;AACHL,IAAAA,IAAI,EAAEJ,WAAW,CAACU;AADf,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMC,YAAY,GAAGC,KAAD,IAAS;AAChC,SAAOC,QAAQ,IAAE;AACbA,IAAAA,QAAQ,CAACC,iBAAiB,EAAlB,CAAR;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,QAAIC,MAAM,GAAG;AACTC,MAAAA,OAAO,EAAE;AACL,yBAAiB,WAAWN;AADvB;AADA,KAAb;AAKAX,IAAAA,KAAK,CAACkB,GAAN,CAAU,uCAAV,EAAkDF,MAAlD,EACCG,IADD,CACMC,GAAG,IAAE;AACVN,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6BK,GAAG,CAACC,IAAjC;AACO,YAAMC,YAAY,GAAG,EAArB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACS,KAdD,EAeCC,KAfD,CAeOC,GAAG,IAAE;AACRZ,MAAAA,QAAQ,CAACP,gBAAgB,CAACmB,GAAD,CAAjB,CAAR;AACH,KAjBD;AAkBH,GA1BD;AA2BH,CA5BM","sourcesContent":["//TO GET ALL ORGANIZATIONS\nimport * as actionTypes from './ActionTypes/actionTypesAllRoles';\nimport axios from 'axios';\nexport const fetchAllRoleSuccess =(AllRoles) =>{\n    return {\n        type: actionTypes.ALL_ROLES_GET_SUCCESS,\n        AllRoles: AllRoles\n    };\n};\n\nexport const fetchAllRoleFail =(error) =>{\n    return {\n        type: actionTypes.ALL_ROLES_GET_FAILED,\n        error:error\n    };\n}\n\nexport const fetchAllRoleStart =()=>{\n    return {\n        type: actionTypes.ALL_ROLES_GET_START\n    };\n}\n\nexport const fetchAllRole =(token)=>{\n    return dispatch=>{\n        dispatch(fetchOrgRoleStart());\n        console.log('GOT DATA');\n        let config = {\n            headers: {\n                'Authorization': 'Token ' + token\n            }\n          }\n        axios.get('http://localhost:8000/router/getrole/',config)\n        .then(res=>{\n         console.log(\"NEWWW RESPONSE\",res.data)\n                const fetchedRoles = [];\n/*\n                for ( let key in res.data) {\n                    //console.log(res.data.fundraiser[key],key)\n                    fetchedRoles.push( {\n                        ...res.data[key],\n                        id: key\n                    } );\n                }\n            dispatch(fetchOrgRoleSuccess(fetchedRoles));\n            console.log(\"FETCHED EVENTS\",fetchedRoles); */\n        })\n        .catch(err=>{\n            dispatch(fetchAllRoleFail(err));\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}