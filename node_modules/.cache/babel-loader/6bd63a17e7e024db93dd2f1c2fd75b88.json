{"ast":null,"code":"//TO GET ALL ORGANIZATIONS\nimport * as actionTypes from './ActionTypes/actionTypesAllOrganization';\nimport axios from 'axios';\nexport const fetchOrganizationsSuccess = organizations => {\n  return {\n    type: actionTypes.FETCH_ORGANIZATIONS_SUCCESS,\n    organizations: organizations\n  };\n};\nexport const fetchOrganizationsFail = error => {\n  return {\n    type: actionTypes.FETCH_ORGANIZATIONS_FAILED,\n    error: error\n  };\n};\nexport const fetchOrganizationsStart = () => {\n  return {\n    type: actionTypes.FETCH_ORGANIZATIONS_START\n  };\n};\nlet token = localStorage.getItem('token');\nexport const fetchOrganizations = token => {\n  return dispatch => {\n    dispatch(fetchOrganizationsStart());\n    console.log('GOT DATA');\n    let config = {\n      headers: {\n        'Authorization': 'Token ' + token\n      }\n    };\n    axios.get('http://localhost:8000/organization/router/OrganizationApi/', config).then(res => {\n      console.log(\"NEWWW RESPONSE\", res.data);\n      const fetchedOrganizations = [];\n\n      for (let key in res.data) {\n        //console.log(res.data.fundraiser[key],key)\n        fetchedOrganizations.push({ ...res.data[key],\n          id: key\n        });\n      }\n\n      dispatch(fetchOrganizationsSuccess(fetchedOrganizations));\n      console.log(\"FETCHED EVENTS\", fetchedOrganizations);\n    }).catch(err => {\n      dispatch(fetchOrganizationsFail(err));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/nitish/Desktop/rbac/React-app/rbac-front/src/Store/Actions/allOrganizations.js"],"names":["actionTypes","axios","fetchOrganizationsSuccess","organizations","type","FETCH_ORGANIZATIONS_SUCCESS","fetchOrganizationsFail","error","FETCH_ORGANIZATIONS_FAILED","fetchOrganizationsStart","FETCH_ORGANIZATIONS_START","token","localStorage","getItem","fetchOrganizations","dispatch","console","log","config","headers","get","then","res","data","fetchedOrganizations","key","push","id","catch","err"],"mappings":"AAAA;AACA,OAAO,KAAKA,WAAZ,MAA6B,0CAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,yBAAyB,GAAGC,aAAD,IAAkB;AACtD,SAAO;AACHC,IAAAA,IAAI,EAAEJ,WAAW,CAACK,2BADf;AAEHF,IAAAA,aAAa,EAAEA;AAFZ,GAAP;AAIH,CALM;AAOP,OAAO,MAAMG,sBAAsB,GAAGC,KAAD,IAAU;AAC3C,SAAO;AACHH,IAAAA,IAAI,EAAEJ,WAAW,CAACQ,0BADf;AAEHD,IAAAA,KAAK,EAACA;AAFH,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,uBAAuB,GAAE,MAAI;AACtC,SAAO;AACHL,IAAAA,IAAI,EAAEJ,WAAW,CAACU;AADf,GAAP;AAGH,CAJM;AAKP,IAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AACA,OAAO,MAAMC,kBAAkB,GAAGH,KAAD,IAAS;AACtC,SAAOI,QAAQ,IAAE;AACbA,IAAAA,QAAQ,CAACN,uBAAuB,EAAxB,CAAR;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,QAAIC,MAAM,GAAG;AACTC,MAAAA,OAAO,EAAE;AACL,yBAAiB,WAAWR;AADvB;AADA,KAAb;AAKAV,IAAAA,KAAK,CAACmB,GAAN,CAAU,4DAAV,EAAuEF,MAAvE,EACCG,IADD,CACMC,GAAG,IAAE;AACVN,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6BK,GAAG,CAACC,IAAjC;AACO,YAAMC,oBAAoB,GAAG,EAA7B;;AAEA,WAAM,IAAIC,GAAV,IAAiBH,GAAG,CAACC,IAArB,EAA2B;AACvB;AACAC,QAAAA,oBAAoB,CAACE,IAArB,CAA2B,EACvB,GAAGJ,GAAG,CAACC,IAAJ,CAASE,GAAT,CADoB;AAEvBE,UAAAA,EAAE,EAAEF;AAFmB,SAA3B;AAIH;;AACLV,MAAAA,QAAQ,CAACb,yBAAyB,CAACsB,oBAAD,CAA1B,CAAR;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6BO,oBAA7B;AACH,KAdD,EAeCI,KAfD,CAeOC,GAAG,IAAE;AACRd,MAAAA,QAAQ,CAACT,sBAAsB,CAACuB,GAAD,CAAvB,CAAR;AACH,KAjBD;AAkBH,GA1BD;AA2BH,CA5BM","sourcesContent":["//TO GET ALL ORGANIZATIONS\nimport * as actionTypes from './ActionTypes/actionTypesAllOrganization';\nimport axios from 'axios';\nexport const fetchOrganizationsSuccess =(organizations) =>{\n    return {\n        type: actionTypes.FETCH_ORGANIZATIONS_SUCCESS,\n        organizations: organizations\n    };\n};\n\nexport const fetchOrganizationsFail =(error) =>{\n    return {\n        type: actionTypes.FETCH_ORGANIZATIONS_FAILED,\n        error:error\n    };\n}\n\nexport const fetchOrganizationsStart =()=>{\n    return {\n        type: actionTypes.FETCH_ORGANIZATIONS_START\n    };\n}\nlet token = localStorage.getItem('token')\nexport const fetchOrganizations =(token)=>{\n    return dispatch=>{\n        dispatch(fetchOrganizationsStart());\n        console.log('GOT DATA');\n        let config = {\n            headers: {\n                'Authorization': 'Token ' + token\n            }\n          }\n        axios.get('http://localhost:8000/organization/router/OrganizationApi/',config)\n        .then(res=>{\n         console.log(\"NEWWW RESPONSE\",res.data)\n                const fetchedOrganizations = [];\n            \n                for ( let key in res.data) {\n                    //console.log(res.data.fundraiser[key],key)\n                    fetchedOrganizations.push( {\n                        ...res.data[key],\n                        id: key\n                    } );\n                }\n            dispatch(fetchOrganizationsSuccess(fetchedOrganizations));\n            console.log(\"FETCHED EVENTS\",fetchedOrganizations);  \n        })\n        .catch(err=>{\n            dispatch(fetchOrganizationsFail(err));\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}