{"ast":null,"code":"import * as actionTypes from '../Actions/ActionTypes/actionTypesAllOrganization';\nimport { updateObject } from '../utils';\nconst initialState = {\n  organization: [] //loading:false,\n\n};\n\nconst fetchOrganizationsStart = (state, action) => {\n  console.log(\"IT HAS STARTEDDD\");\n};\n\nconst fetchOrganizationsSuccess = (state, action) => {\n  console.log('ACTIONNN', action.organization);\n  return updateObject(state, {\n    organization: action.organization //loading: false\n\n  });\n};\n\nconst fetchOrganizationsFail = (state, action) => {\n  return updateObject(state, {\n    loading: false\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.FETCH_ORGAIZATION_START:\n      return fetchEventsStart(state, action);\n\n    case actionTypes.FETCH_EVENTS_SUCCESS:\n      return fetchEventsSuccess(state, action);\n\n    case actionTypes.FETCH_EVENTS_FAILED:\n      return fetchEventsFail(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/nitish/Desktop/rbac/React-app/rbac-front/src/Store/Reducers/allOrganizations.js"],"names":["actionTypes","updateObject","initialState","organization","fetchOrganizationsStart","state","action","console","log","fetchOrganizationsSuccess","fetchOrganizationsFail","loading","reducer","type","FETCH_ORGAIZATION_START","fetchEventsStart","FETCH_EVENTS_SUCCESS","fetchEventsSuccess","FETCH_EVENTS_FAILED","fetchEventsFail"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,mDAA7B;AACA,SAASC,YAAT,QAA6B,UAA7B;AACA,MAAMC,YAAY,GAAC;AACfC,EAAAA,YAAY,EAAC,EADE,CAEf;;AAFe,CAAnB;;AAKA,MAAMC,uBAAuB,GAAG,CAAEC,KAAF,EAASC,MAAT,KAAqB;AACjDC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH,CAFD;;AAIA,MAAMC,yBAAyB,GAAG,CAAEJ,KAAF,EAASC,MAAT,KAAqB;AACnDC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBF,MAAM,CAACH,YAA9B;AACA,SAAOF,YAAY,CAAEI,KAAF,EAAS;AACxBF,IAAAA,YAAY,EAACG,MAAM,CAACH,YADI,CAExB;;AAFwB,GAAT,CAAnB;AAKH,CAPD;;AASA,MAAMO,sBAAsB,GAAG,CAAEL,KAAF,EAASC,MAAT,KAAqB;AAChD,SAAOL,YAAY,CAAEI,KAAF,EAAS;AAAEM,IAAAA,OAAO,EAAE;AAAX,GAAT,CAAnB;AACH,CAFD;;AAIA,MAAMC,OAAO,GAAE,CAACP,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAiC;AAC5C,UAAOA,MAAM,CAACO,IAAd;AACI,SAAKb,WAAW,CAACc,uBAAjB;AAA0C,aAAOC,gBAAgB,CAAEV,KAAF,EAASC,MAAT,CAAvB;;AAC1C,SAAKN,WAAW,CAACgB,oBAAjB;AAAuC,aAAOC,kBAAkB,CAAEZ,KAAF,EAASC,MAAT,CAAzB;;AACvC,SAAKN,WAAW,CAACkB,mBAAjB;AAAsC,aAAOC,eAAe,CAAEd,KAAF,EAASC,MAAT,CAAtB;;AACtC;AAAS,aAAOD,KAAP;AAJb;AAMH,CAPD;;AAQA,eAAeO,OAAf","sourcesContent":["import * as actionTypes from '../Actions/ActionTypes/actionTypesAllOrganization';\nimport { updateObject } from '../utils';\nconst initialState={\n    organization:[],\n    //loading:false,\n}\n\nconst fetchOrganizationsStart = ( state, action ) => {\n    console.log(\"IT HAS STARTEDDD\");\n};\n\nconst fetchOrganizationsSuccess = ( state, action ) => {\n    console.log('ACTIONNN',action.organization);\n    return updateObject( state, {\n        organization:action.organization,\n        //loading: false\n    } );\n   \n};\n\nconst fetchOrganizationsFail = ( state, action ) => {\n    return updateObject( state, { loading: false } );\n};\n\nconst reducer =(state = initialState, action )=>{\n    switch(action.type){\n        case actionTypes.FETCH_ORGAIZATION_START: return fetchEventsStart( state, action );\n        case actionTypes.FETCH_EVENTS_SUCCESS: return fetchEventsSuccess( state, action );\n        case actionTypes.FETCH_EVENTS_FAILED: return fetchEventsFail( state, action );\n        default: return state;\n    }\n}\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}