{"ast":null,"code":"//TO GET ALL ORGANIZATIONS\nimport * as actionTypes from './ActionTypes/actionTypesGetAllPermission';\nimport axios from 'axios';\nexport const fetchAllPermissionsSuccess = permissions => {\n  return {\n    type: actionTypes.FETCH_ALL_PERMISSIONS_SUCCESS,\n    permissions: permissions\n  };\n};\nexport const fetchAllPermissionsFail = error => {\n  return {\n    type: actionTypes.FETCH_ALL_PERMISSIONS_FAILED,\n    error: error\n  };\n};\nexport const fetchAllPermissionsStart = () => {\n  return {\n    type: actionTypes.FETCH_ALL_PERMISSIONS_START\n  };\n};\nexport const fetchAllPermissions = token => {\n  token = localStorage.getItem('token');\n  return dispatch => {\n    dispatch(fetchAllPermissionsStart());\n    console.log('GOT DATA');\n    let config = {\n      headers: {\n        'Authorization': 'Token ' + token\n      }\n    };\n    axios.get('http://127.0.0.1:8000/permissions_roles/router/PermissionApi/', config).then(res => {\n      console.log(\"NEWWW RESPONSE\", res.data);\n      const fetchedPermissions = [];\n\n      for (let key in res.data) {\n        //console.log(res.data.fundraiser[key],key)\n        fetchedPermissions.push({ ...res.data[key],\n          id: res.data[key].id\n        });\n      }\n\n      dispatch(fetchAllPermissionsSuccess(fetchedPermissions));\n      console.log(\"FETCHED EVENTS\", fetchedPermissions);\n    }).catch(err => {\n      dispatch(fetchAllPermissionsFail(err));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/nitish/Desktop/rbac/React-app/rbac-front/src/Store/Actions/allPermissions.js"],"names":["actionTypes","axios","fetchAllPermissionsSuccess","permissions","type","FETCH_ALL_PERMISSIONS_SUCCESS","fetchAllPermissionsFail","error","FETCH_ALL_PERMISSIONS_FAILED","fetchAllPermissionsStart","FETCH_ALL_PERMISSIONS_START","fetchAllPermissions","token","localStorage","getItem","dispatch","console","log","config","headers","get","then","res","data","fetchedPermissions","key","push","id","catch","err"],"mappings":"AAAA;AACA,OAAO,KAAKA,WAAZ,MAA6B,2CAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,0BAA0B,GAAGC,WAAD,IAAgB;AACrD,SAAO;AACHC,IAAAA,IAAI,EAAEJ,WAAW,CAACK,6BADf;AAEHF,IAAAA,WAAW,EAAEA;AAFV,GAAP;AAIH,CALM;AAOP,OAAO,MAAMG,uBAAuB,GAAGC,KAAD,IAAU;AAC5C,SAAO;AACHH,IAAAA,IAAI,EAAEJ,WAAW,CAACQ,4BADf;AAEHD,IAAAA,KAAK,EAACA;AAFH,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,wBAAwB,GAAE,MAAI;AACvC,SAAO;AACHL,IAAAA,IAAI,EAAEJ,WAAW,CAACU;AADf,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMC,mBAAmB,GAAGC,KAAD,IAAS;AACtCA,EAAAA,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAR;AACD,SAAOC,QAAQ,IAAE;AACbA,IAAAA,QAAQ,CAACN,wBAAwB,EAAzB,CAAR;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,QAAIC,MAAM,GAAG;AACTC,MAAAA,OAAO,EAAE;AACL,yBAAiB,WAAWP;AADvB;AADA,KAAb;AAKAX,IAAAA,KAAK,CAACmB,GAAN,CAAU,+DAAV,EAA0EF,MAA1E,EACCG,IADD,CACMC,GAAG,IAAE;AACVN,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6BK,GAAG,CAACC,IAAjC;AACO,YAAMC,kBAAkB,GAAG,EAA3B;;AAEA,WAAM,IAAIC,GAAV,IAAiBH,GAAG,CAACC,IAArB,EAA2B;AACvB;AACAC,QAAAA,kBAAkB,CAACE,IAAnB,CAAyB,EACrB,GAAGJ,GAAG,CAACC,IAAJ,CAASE,GAAT,CADkB;AAErBE,UAAAA,EAAE,EAAEL,GAAG,CAACC,IAAJ,CAASE,GAAT,EAAcE;AAFG,SAAzB;AAIH;;AACLZ,MAAAA,QAAQ,CAACb,0BAA0B,CAACsB,kBAAD,CAA3B,CAAR;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6BO,kBAA7B;AACH,KAdD,EAeCI,KAfD,CAeOC,GAAG,IAAE;AACRd,MAAAA,QAAQ,CAACT,uBAAuB,CAACuB,GAAD,CAAxB,CAAR;AACH,KAjBD;AAkBH,GA1BD;AA2BH,CA7BM","sourcesContent":["//TO GET ALL ORGANIZATIONS\nimport * as actionTypes from './ActionTypes/actionTypesGetAllPermission';\nimport axios from 'axios';\nexport const fetchAllPermissionsSuccess =(permissions) =>{\n    return {\n        type: actionTypes.FETCH_ALL_PERMISSIONS_SUCCESS,\n        permissions: permissions\n    };\n};\n\nexport const fetchAllPermissionsFail =(error) =>{\n    return {\n        type: actionTypes.FETCH_ALL_PERMISSIONS_FAILED,\n        error:error\n    };\n}\n\nexport const fetchAllPermissionsStart =()=>{\n    return {\n        type: actionTypes.FETCH_ALL_PERMISSIONS_START\n    };\n}\n\nexport const fetchAllPermissions =(token)=>{\n     token = localStorage.getItem('token')\n    return dispatch=>{\n        dispatch(fetchAllPermissionsStart());\n        console.log('GOT DATA');\n        let config = {\n            headers: {\n                'Authorization': 'Token ' + token\n            }\n          }\n        axios.get('http://127.0.0.1:8000/permissions_roles/router/PermissionApi/',config)\n        .then(res=>{\n         console.log(\"NEWWW RESPONSE\",res.data)\n                const fetchedPermissions = [];\n            \n                for ( let key in res.data) {\n                    //console.log(res.data.fundraiser[key],key)\n                    fetchedPermissions.push( {\n                        ...res.data[key],\n                        id: res.data[key].id\n                    } );\n                }\n            dispatch(fetchAllPermissionsSuccess(fetchedPermissions));\n            console.log(\"FETCHED EVENTS\",fetchedPermissions);  \n        })\n        .catch(err=>{\n            dispatch(fetchAllPermissionsFail(err));\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}