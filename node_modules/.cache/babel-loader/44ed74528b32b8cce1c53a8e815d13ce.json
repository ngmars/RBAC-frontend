{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nitish/Desktop/rbac/React-app/rbac-front/src/Containers/Dashboard/CreateRole/CreateRole.js\",\n    _s = $RefreshSig$();\n\nimport * as actions from '../../../Store/Actions/Index';\nimport { Redirect } from 'react-router-dom';\nimport Input from '../../../Components/UI/Input/input';\nimport Navbar from '../../../Components/Navbar/Navbar';\nimport Sidebar from '../../../Components/Sidebar/Sidebar';\nimport React, { Component, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport FormData from 'form-data';\nimport OneRole from '../../../Components/OneRole/OneRole';\nimport classes from './CreateRole.css';\n\nconst CreateRole = props => {\n  _s();\n\n  //USE EFFECT COMPONENTS\n  useEffect(() => {\n    let token = localStorage.getItem('token');\n    props.onFetchOrganizations(token);\n    props.onFetchAllPermissions(token);\n  }, []); //USE STATE COMPONENTS\n\n  const [createOrgForm, SetcreateOrgForm] = useState({\n    name: {\n      elementType: 'input',\n      elementConfig: {\n        className: 'formcontrol',\n        type: 'text',\n        placeholder: 'Role Name'\n      },\n      value: '',\n      validation: {\n        required: true\n      },\n      valid: false,\n      touched: false\n    },\n    email: {\n      elementType: 'input',\n      elementConfig: {\n        className: 'formcontrol',\n        type: 'text',\n        placeholder: 'Email ID'\n      },\n      value: '',\n      validation: {\n        required: true,\n        isEmail: true\n      },\n      valid: false,\n      touched: false\n    },\n    Owner: {\n      label: 'Owner',\n      elementType: 'dropdown',\n      elementConfig: {\n        className: 'formcontrol'\n      },\n      options: '',\n      value: 0,\n      valid: false,\n      touched: false\n    },\n    Users: {\n      label: 'Users',\n      elementType: 'select-multiple',\n      elementConfig: {\n        className: 'formcontrol',\n        options: []\n      },\n      options: '',\n      value: [],\n      valid: false,\n      touched: false\n    },\n    permisson_loaded: {\n      label: 'Permission Loaded',\n      elementType: 'check-box',\n      value: isPermLod\n    }\n  }); //UI COMPONENTS\n\n  let sidebar = /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 19\n  }, this);\n\n  let navbar = /*#__PURE__*/_jsxDEV(Navbar, {\n    name: localStorage.getItem('name')\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 19\n  }, this);\n\n  let count = 0;\n\n  let form = /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 16\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [navbar, sidebar, /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"CrtOrgForm\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"SUBMIT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateRole, \"h05U1NG+Pg51I8q9uGDwNt50QzA=\");\n\n_c = CreateRole;\n\nconst mapAllOrganizationsDispatchToProps = dispatch => {\n  return {\n    onFetchOrganizations: token => dispatch(actions.fetchOrganizations(token)),\n    onFetchAllPermissions: token => dispatch(actions.fetchAllPermissions(token)) //onCreateOrg:(name,email,owner,users,permissions_loaded,token)=>dispatch(actions.createOrg(name,email,owner,users,permissions_loaded,token))\n\n  };\n}; //to access the errors and loading state \n\n\nconst mapStatetoProps = state => {\n  console.log('main page crtrole', state);\n  return {\n    AllUsers: state.AllUsers.AllUsers,\n    loading: state.AllUsers.loading,\n    token: state.auth.token\n  };\n};\n\nexport default connect(mapStatetoProps, mapAllOrganizationsDispatchToProps)(CreateRole);\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateRole\");","map":{"version":3,"sources":["/Users/nitish/Desktop/rbac/React-app/rbac-front/src/Containers/Dashboard/CreateRole/CreateRole.js"],"names":["actions","Redirect","Input","Navbar","Sidebar","React","Component","useState","useEffect","connect","FormData","OneRole","classes","CreateRole","props","token","localStorage","getItem","onFetchOrganizations","onFetchAllPermissions","createOrgForm","SetcreateOrgForm","name","elementType","elementConfig","className","type","placeholder","value","validation","required","valid","touched","email","isEmail","Owner","label","options","Users","permisson_loaded","isPermLod","sidebar","navbar","count","form","mapAllOrganizationsDispatchToProps","dispatch","fetchOrganizations","fetchAllPermissions","mapStatetoProps","state","console","log","AllUsers","loading","auth"],"mappings":"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","sourcesContent":["import * as actions from '../../../Store/Actions/Index'; \nimport {Redirect} from 'react-router-dom';\nimport Input from '../../../Components/UI/Input/input';\nimport Navbar from '../../../Components/Navbar/Navbar';\nimport Sidebar from '../../../Components/Sidebar/Sidebar';\nimport React, { Component, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport FormData from 'form-data'; \nimport OneRole from '../../../Components/OneRole/OneRole';\nimport classes from './CreateRole.css';\nconst CreateRole = props =>{\n    //USE EFFECT COMPONENTS\n    useEffect (()=>{\n        let token = localStorage.getItem('token')\n        props.onFetchOrganizations(token);\n        props.onFetchAllPermissions(token);\n    },[]);\n\n    //USE STATE COMPONENTS\n    const [createOrgForm,SetcreateOrgForm]= useState({\n        name: {\n            elementType: 'input',\n            elementConfig: {\n                className:'formcontrol',\n                type: 'text',\n                placeholder: 'Role Name'\n            },\n            value: '',\n            validation: {\n                required: true,\n            },\n            valid: false,\n            touched: false\n        },\n        email: {\n            elementType: 'input',\n            elementConfig: {\n                className:'formcontrol',\n                type: 'text',\n                placeholder: 'Email ID'\n            },\n            value: '',\n            validation: {\n                required: true,\n                isEmail: true\n            },\n            valid: false,\n            touched: false\n        },\n        Owner: {\n            label:'Owner',\n            elementType: 'dropdown',\n            elementConfig: {\n                className:'formcontrol',\n                \n            },\n            options:'',\n            value: 0,\n            valid: false,\n            touched: false\n        },\n        Users: {\n            label:'Users',\n            elementType: 'select-multiple',\n            elementConfig: {\n                className:'formcontrol',\n                options:[]\n            },\n            options:'',\n            value: [],\n            valid: false,\n            touched: false\n        },\n        permisson_loaded:{\n            label: 'Permission Loaded',\n            elementType: 'check-box',\n            value: isPermLod\n        }\n       })\n\n\n\n\n    //UI COMPONENTS\n    let sidebar = <Sidebar/>;\n    let navbar =  <Navbar name ={localStorage.getItem('name')}/>;\n    let count = 0;\n    let form=  <Sidebar/>;\n    \n    return(\n        <div>\n            {navbar}\n            {sidebar}\n            <form className=\"CrtOrgForm\" >\n                <button >SUBMIT</button>\n            </form>\n    </div>)\n\n    }\n    \n    \n\nconst mapAllOrganizationsDispatchToProps =dispatch => {\n  \n    return{\n        onFetchOrganizations:(token) =>dispatch(actions.fetchOrganizations(token)),\n        onFetchAllPermissions:(token) =>dispatch(actions.fetchAllPermissions(token)),\n        //onCreateOrg:(name,email,owner,users,permissions_loaded,token)=>dispatch(actions.createOrg(name,email,owner,users,permissions_loaded,token))\n    };\n}\n\n\n//to access the errors and loading state \nconst mapStatetoProps = state =>{\n    console.log('main page crtrole',state)\n    return {\n    AllUsers: state.AllUsers.AllUsers,\n    loading:state.AllUsers.loading,\n    token:state.auth.token\n    };\n};\n\n\nexport default connect(mapStatetoProps, mapAllOrganizationsDispatchToProps)(CreateRole);\n"]},"metadata":{},"sourceType":"module"}