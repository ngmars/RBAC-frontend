{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nitish/Desktop/rbac/React-app/rbac-front/src/Containers/Dashboard/OneRole/OneRole.js\",\n    _s = $RefreshSig$();\n\nimport * as actions from '../../../Store/Actions/Index';\nimport { Redirect } from 'react-router-dom';\nimport Navbar from '../../../Components/Navbar/Navbar';\nimport classes from './OneRole.css';\nimport Sidebar from '../../../Components/Sidebar/Sidebar';\nimport React, { Component, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport FormData from 'form-data';\nimport OneRole from '../../../Components/OneRole/OneRole';\n\nconst ViewRoleByOrgs = props => {\n  _s();\n\n  useEffect(() => {\n    let organizationId = localStorage.getItem('eventId');\n    let token = localStorage.getItem('token');\n    props.onFetchRolebyOrg(organizationId, token);\n  }, []);\n\n  let sidebar = /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 19\n  }, this);\n\n  let navbar = /*#__PURE__*/_jsxDEV(Navbar, {\n    name: localStorage.getItem('name')\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 19\n  }, this);\n\n  let rolesElement = /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 24\n  }, this);\n\n  if (!props.loading) {\n    rolesElement = props.RoleByOrganization.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"reposition\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        name: \"componentButton\",\n        value: event,\n        children: /*#__PURE__*/_jsxDEV(OneRole, {\n          name: event.name,\n          permission: event.permission,\n          roleId: event.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [navbar, sidebar, /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"fund-pics row\",\n      children: rolesElement\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ViewRoleByOrgs, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ViewRoleByOrgs;\n\nconst mapAllRoleByOrgDispatchToProps = dispatch => {\n  return {\n    onFetchRolebyOrg: (organizationId, token) => dispatch(actions.fetchOrgRole(organizationId, token)) //onFetchOneEvents:(OrganizationId)=>dispatch(actions.fetchOneOrganizations(fundId))\n\n  };\n}; //to access the errors and loading state \n\n\nconst mapStatetoProps = state => {\n  console.log('main page oneRole', state);\n  return {\n    RoleByOrganization: state.RoleByOrganization.RoleByOrganization,\n    loading: state.organizations.loading,\n    token: state.auth.token\n  };\n};\n\nexport default connect(mapStatetoProps, mapAllRoleByOrgDispatchToProps)(ViewRoleByOrgs);\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewRoleByOrgs\");","map":{"version":3,"sources":["/Users/nitish/Desktop/rbac/React-app/rbac-front/src/Containers/Dashboard/OneRole/OneRole.js"],"names":["actions","Redirect","Navbar","classes","Sidebar","React","Component","useState","useEffect","connect","FormData","OneRole","ViewRoleByOrgs","props","organizationId","localStorage","getItem","token","onFetchRolebyOrg","sidebar","navbar","rolesElement","loading","RoleByOrganization","map","event","name","permission","id","mapAllRoleByOrgDispatchToProps","dispatch","fetchOrgRole","mapStatetoProps","state","console","log","organizations","auth"],"mappings":";;;;;AAAA,OAAO,KAAKA,OAAZ,MAAyB,8BAAzB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,OAAP,MAAoB,qCAApB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,OAAP,MAAoB,qCAApB;;AACA,MAAMC,cAAc,GAAGC,KAAK,IAAG;AAAA;;AAE3BL,EAAAA,SAAS,CAAE,MAAI;AACX,QAAIM,cAAc,GAAGC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAArB;AACA,QAAIC,KAAK,GAAGF,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AACAH,IAAAA,KAAK,CAACK,gBAAN,CAAuBJ,cAAvB,EAAwCG,KAAxC;AACH,GAJQ,EAIP,EAJO,CAAT;;AAMA,MAAIE,OAAO,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAAd;;AACA,MAAIC,MAAM,gBAAI,QAAC,MAAD;AAAQ,IAAA,IAAI,EAAGL,YAAY,CAACC,OAAb,CAAqB,MAArB;AAAf;AAAA;AAAA;AAAA;AAAA,UAAd;;AACA,MAAIK,YAAY,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAAnB;;AAEA,MAAG,CAACR,KAAK,CAACS,OAAV,EAAkB;AAEdD,IAAAA,YAAY,GAAER,KAAK,CAACU,kBAAN,CAAyBC,GAAzB,CAA6BC,KAAK,iBAChD;AAAK,MAAA,KAAK,EAAC,YAAX;AAAA,6BACA;AAAQ,QAAA,IAAI,EAAC,iBAAb;AAA+B,QAAA,KAAK,EAAEA,KAAtC;AAAA,+BACA,QAAC,OAAD;AACI,UAAA,IAAI,EAAEA,KAAK,CAACC,IADhB;AAEI,UAAA,UAAU,EAAED,KAAK,CAACE,UAFtB;AAGI,UAAA,MAAM,EAAIF,KAAK,CAACG;AAHpB;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADc,CAAd;AAWH;;AAED,sBACI;AAAA,eACKR,MADL,EAEKD,OAFL,eAGI;AAAK,MAAA,KAAK,EAAC,eAAX;AAAA,gBACKE;AADL;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CApCD;;GAAMT,c;;KAAAA,c;;AAwCN,MAAMiB,8BAA8B,GAAEC,QAAQ,IAAI;AAE9C,SAAM;AACFZ,IAAAA,gBAAgB,EAAC,CAACJ,cAAD,EAAgBG,KAAhB,KAA0Ba,QAAQ,CAAC9B,OAAO,CAAC+B,YAAR,CAAqBjB,cAArB,EAAoCG,KAApC,CAAD,CADjD,CAEF;;AAFE,GAAN;AAIH,CAND,C,CASA;;;AACA,MAAMe,eAAe,GAAGC,KAAK,IAAG;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAgCF,KAAhC;AACA,SAAO;AAEPV,IAAAA,kBAAkB,EAACU,KAAK,CAACV,kBAAN,CAAyBA,kBAFrC;AAGPD,IAAAA,OAAO,EAACW,KAAK,CAACG,aAAN,CAAoBd,OAHrB;AAIPL,IAAAA,KAAK,EAACgB,KAAK,CAACI,IAAN,CAAWpB;AAJV,GAAP;AAMH,CARD;;AAWA,eAAeR,OAAO,CAACuB,eAAD,EAAkBH,8BAAlB,CAAP,CAAyDjB,cAAzD,CAAf","sourcesContent":["import * as actions from '../../../Store/Actions/Index'; \nimport {Redirect} from 'react-router-dom';\nimport Navbar from '../../../Components/Navbar/Navbar';\nimport classes from './OneRole.css';\nimport Sidebar from '../../../Components/Sidebar/Sidebar';\nimport React, { Component, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport FormData from 'form-data'; \nimport OneRole from '../../../Components/OneRole/OneRole';\nconst ViewRoleByOrgs = props =>{\n   \n    useEffect (()=>{\n        let organizationId = localStorage.getItem('eventId');\n        let token = localStorage.getItem('token');\n        props.onFetchRolebyOrg(organizationId , token);\n    },[]);\n\n    let sidebar = <Sidebar/>;\n    let navbar =  <Navbar name ={localStorage.getItem('name')}/>;\n    let rolesElement=  <Sidebar/>;\n    \n    if(!props.loading){\n\n        rolesElement= props.RoleByOrganization.map(event =>(\n        <div class=\"reposition\">\n        <button name=\"componentButton\" value={event}>\n        <OneRole \n            name={event.name}\n            permission={event.permission}\n            roleId = {event.id}\n              />\n        </button>\n        </div>\n           ))\n    }\n  \n    return(\n        <div>\n            {navbar}\n            {sidebar}\n            <div class=\"fund-pics row\">\n                {rolesElement}\n            </div>\n    </div>)\n\n}\n    \n    \n\nconst mapAllRoleByOrgDispatchToProps =dispatch => {\n  \n    return{\n        onFetchRolebyOrg:(organizationId,token ) =>dispatch(actions.fetchOrgRole(organizationId,token )),\n        //onFetchOneEvents:(OrganizationId)=>dispatch(actions.fetchOneOrganizations(fundId))\n    };\n}\n\n\n//to access the errors and loading state \nconst mapStatetoProps = state =>{\n    console.log('main page oneRole',state)\n    return {\n\n    RoleByOrganization:state.RoleByOrganization.RoleByOrganization,\n    loading:state.organizations.loading,\n    token:state.auth.token\n    };\n};\n\n\nexport default connect(mapStatetoProps, mapAllRoleByOrgDispatchToProps)(ViewRoleByOrgs);\n"]},"metadata":{},"sourceType":"module"}