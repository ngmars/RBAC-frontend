{"ast":null,"code":"//TO GET ALL ORGANIZATIONS\nimport * as actionTypes from './actionTypes/actionTypesAllOrganization';\nimport axios from 'axios';\nexport const fetchOrganizationsSuccess = events => {\n  return {\n    type: actionTypes.FETCH_ORGANIZATIONS_SUCCESS,\n    events: events\n  };\n};\nexport const fetchOrganizationsFail = error => {\n  return {\n    type: actionTypes.FETCH_ORGANIZATIONS_FAILED,\n    error: error\n  };\n};\nexport const fetchOrganizationsStart = () => {\n  return {\n    type: actionTypes.FETCH_ORGANIZATIONS_START\n  };\n};\nexport const fetchOrganizations = token => {\n  return dispatch => {\n    dispatch(fetchOrganizationsStart());\n    console.log('GOT DATA');\n    let config = {\n      headers: {\n        'Authorization': 'Token ' + token\n      }\n    };\n    axios.get('http://localhost:8000/organization/router/OrganizationApi/', config).then(res => {\n      console.log(\"NEWWW RESPONSE\", res.data); //const fetchedOrganizations = [];\n\n      /*\n          for ( let key in res.data.fundraiser) {\n              //console.log(res.data.fundraiser[key],key)\n              fetchedEvents.push( {\n                  ...res.data.fundraiser[key],\n                  id: key\n              } );\n          }\n      //dispatch(fetchEventsSuccess(fetchedEvents));\n      //console.log(\"FETCHED EVENTS\",fetchedEvents);*/\n    }).catch(err => {\n      dispatch(fetchEventsFail(err));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/nitish/Desktop/rbac/React-app/rbac-front/src/Store/Actions/allOrganizations.js"],"names":["actionTypes","axios","fetchOrganizationsSuccess","events","type","FETCH_ORGANIZATIONS_SUCCESS","fetchOrganizationsFail","error","FETCH_ORGANIZATIONS_FAILED","fetchOrganizationsStart","FETCH_ORGANIZATIONS_START","fetchOrganizations","token","dispatch","console","log","config","headers","get","then","res","data","catch","err","fetchEventsFail"],"mappings":"AAAA;AACA,OAAO,KAAKA,WAAZ,MAA6B,0CAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,yBAAyB,GAAGC,MAAD,IAAW;AAC/C,SAAO;AACHC,IAAAA,IAAI,EAAEJ,WAAW,CAACK,2BADf;AAEHF,IAAAA,MAAM,EAAEA;AAFL,GAAP;AAIH,CALM;AAOP,OAAO,MAAMG,sBAAsB,GAAGC,KAAD,IAAU;AAC3C,SAAO;AACHH,IAAAA,IAAI,EAAEJ,WAAW,CAACQ,0BADf;AAEHD,IAAAA,KAAK,EAACA;AAFH,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,uBAAuB,GAAE,MAAI;AACtC,SAAO;AACHL,IAAAA,IAAI,EAAEJ,WAAW,CAACU;AADf,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMC,kBAAkB,GAAGC,KAAD,IAAS;AACtC,SAAOC,QAAQ,IAAE;AACbA,IAAAA,QAAQ,CAACJ,uBAAuB,EAAxB,CAAR;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,QAAIC,MAAM,GAAG;AACTC,MAAAA,OAAO,EAAE;AACL,yBAAiB,WAAWL;AADvB;AADA,KAAb;AAKAX,IAAAA,KAAK,CAACiB,GAAN,CAAU,4DAAV,EAAuEF,MAAvE,EACCG,IADD,CACMC,GAAG,IAAE;AACVN,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6BK,GAAG,CAACC,IAAjC,EADU,CAEP;;AACA;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACS,KAdD,EAeCC,KAfD,CAeOC,GAAG,IAAE;AACRV,MAAAA,QAAQ,CAACW,eAAe,CAACD,GAAD,CAAhB,CAAR;AACH,KAjBD;AAkBH,GA1BD;AA2BH,CA5BM","sourcesContent":["//TO GET ALL ORGANIZATIONS\nimport * as actionTypes from './actionTypes/actionTypesAllOrganization';\nimport axios from 'axios';\nexport const fetchOrganizationsSuccess =(events) =>{\n    return {\n        type: actionTypes.FETCH_ORGANIZATIONS_SUCCESS,\n        events: events\n    };\n};\n\nexport const fetchOrganizationsFail =(error) =>{\n    return {\n        type: actionTypes.FETCH_ORGANIZATIONS_FAILED,\n        error:error\n    };\n}\n\nexport const fetchOrganizationsStart =()=>{\n    return {\n        type: actionTypes.FETCH_ORGANIZATIONS_START\n    };\n}\n\nexport const fetchOrganizations =(token)=>{\n    return dispatch=>{\n        dispatch(fetchOrganizationsStart());\n        console.log('GOT DATA');\n        let config = {\n            headers: {\n                'Authorization': 'Token ' + token\n            }\n          }\n        axios.get('http://localhost:8000/organization/router/OrganizationApi/',config)\n        .then(res=>{\n         console.log(\"NEWWW RESPONSE\",res.data)\n            //const fetchedOrganizations = [];\n            /*\n                for ( let key in res.data.fundraiser) {\n                    //console.log(res.data.fundraiser[key],key)\n                    fetchedEvents.push( {\n                        ...res.data.fundraiser[key],\n                        id: key\n                    } );\n                }\n            //dispatch(fetchEventsSuccess(fetchedEvents));\n            //console.log(\"FETCHED EVENTS\",fetchedEvents);*/\n        })\n        .catch(err=>{\n            dispatch(fetchEventsFail(err));\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}