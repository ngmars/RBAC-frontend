{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nitish/Desktop/rbac/React-app/rbac-front/src/Containers/Dashboard/ViewOrg/ViewOrg.js\",\n    _s = $RefreshSig$();\n\nimport * as actions from '../../../Store/Actions/Index';\nimport { Redirect } from 'react-router-dom';\nimport Navbar from '../../../Components/Navbar/Navbar';\nimport Sidebar from '../../../Components/Sidebar/Sidebar';\nimport React, { Component, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport FormData from 'form-data';\n\nconst ViewOrgs = props => {\n  _s();\n\n  const [gotOrganizations, setGotOrganizations] = useState([]);\n  useEffect(() => {\n    let token = localStorage.getItem('token');\n    props.onFetchOrganizations();\n  }, []);\n\n  let sidebar = /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 19\n  }, this);\n\n  let navbar = /*#__PURE__*/_jsxDEV(Navbar, {\n    name: localStorage.getItem('name')\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 19\n  }, this);\n\n  let orgzs;\n  /*\n  if ( !props.loading ) {\n      let organizationsArr= props.state;\n      for (let i=0;i<organizationsArr.length;i++){\n          console.log(i);\n          setGotOrganizations.push({\n              name: organizationsArr[i].name,\n              owner: organizationsArr[i].owner,\n              OrgId: organizationsArr[i].id\n          });\n       console.log('EVENT NAME',gotOrganizations) \n      }\n  \n  orgzs = gotOrganizations.map( event => (\n      <button name=\"componentButton\" >\n      <div className=\"col-md-6 col-lg-4 col-xl-3\">\n        <figure className=\"snip1527\" >\n          <div className=\"image\"><img src={require(\"./new_img.jpg\")}/></div>\n          <figcaption>\n            <div className=\"date\"><span className=\"day\">GO</span><span className=\"month\">FUND!</span></div>\n            <h3>NAME: {event.name}</h3>\n            <h3>OWNER: {event.name}</h3>\n            <h3>Organization ID :{event.name}</h3>\n          </figcaption>\n          <a ></a>\n        </figure>\n      </div>\n      </button>\n      ))\n  }*/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"myfunds\",\n    children: [navbar, sidebar, \"// \", orgzs]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ViewOrgs, \"30un+4rQpRhxjskMKtqHe1oSoyY=\");\n\n_c = ViewOrgs;\n\nconst mapAllOrganizationsDispatchToProps = dispatch => {\n  return {\n    onFetchOrganizations: token => dispatch(actions.fetchOrganizations(token)) //onFetchOneEvents:(OrganizationId)=>dispatch(actions.fetchOneOrganizations(fundId))\n\n  };\n}; //to access the errors and loading state \n\n\nconst mapStatetoProps = state => {\n  console.log('main page vworg', state);\n  return {\n    organizations: state.organizations.organizations,\n    loading: state.organizations.loading,\n    token: state.auth.token\n  };\n};\n\nexport default connect(mapStatetoProps, mapAllOrganizationsDispatchToProps)(ViewOrgs);\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewOrgs\");","map":{"version":3,"sources":["/Users/nitish/Desktop/rbac/React-app/rbac-front/src/Containers/Dashboard/ViewOrg/ViewOrg.js"],"names":["actions","Redirect","Navbar","Sidebar","React","Component","useState","useEffect","connect","FormData","ViewOrgs","props","gotOrganizations","setGotOrganizations","token","localStorage","getItem","onFetchOrganizations","sidebar","navbar","orgzs","mapAllOrganizationsDispatchToProps","dispatch","fetchOrganizations","mapStatetoProps","state","console","log","organizations","loading","auth"],"mappings":";;;;;AAAA,OAAO,KAAKA,OAAZ,MAAyB,8BAAzB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,OAAP,MAAoB,qCAApB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAG;AAAA;;AACrB,QAAK,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CP,QAAQ,CAAC,EAAD,CAAvD;AACAC,EAAAA,SAAS,CAAE,MAAI;AAEX,QAAIO,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AACAL,IAAAA,KAAK,CAACM,oBAAN;AACH,GAJQ,EAIP,EAJO,CAAT;;AAOA,MAAIC,OAAO,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAAd;;AACA,MAAIC,MAAM,gBAAI,QAAC,MAAD;AAAQ,IAAA,IAAI,EAAGJ,YAAY,CAACC,OAAb,CAAqB,MAArB;AAAf;AAAA;AAAA;AAAA;AAAA,UAAd;;AACA,MAAII,KAAJ;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACI,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,eACKD,MADL,EAEKD,OAFL,SAGOE,KAHP;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAtDD;;GAAMV,Q;;KAAAA,Q;;AAuDN,MAAMW,kCAAkC,GAAEC,QAAQ,IAAI;AAElD,SAAM;AACFL,IAAAA,oBAAoB,EAAEH,KAAD,IAAUQ,QAAQ,CAACtB,OAAO,CAACuB,kBAAR,CAA2BT,KAA3B,CAAD,CADrC,CAEF;;AAFE,GAAN;AAIH,CAND,C,CASA;;;AACA,MAAMU,eAAe,GAAGC,KAAK,IAAG;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA8BF,KAA9B;AACA,SAAO;AACPG,IAAAA,aAAa,EAAEH,KAAK,CAACG,aAAN,CAAoBA,aAD5B;AAEPC,IAAAA,OAAO,EAACJ,KAAK,CAACG,aAAN,CAAoBC,OAFrB;AAGPf,IAAAA,KAAK,EAACW,KAAK,CAACK,IAAN,CAAWhB;AAHV,GAAP;AAKH,CAPD;;AAUA,eAAeN,OAAO,CAACgB,eAAD,EAAkBH,kCAAlB,CAAP,CAA6DX,QAA7D,CAAf","sourcesContent":["import * as actions from '../../../Store/Actions/Index'; \nimport {Redirect} from 'react-router-dom';\nimport Navbar from '../../../Components/Navbar/Navbar';\nimport Sidebar from '../../../Components/Sidebar/Sidebar';\nimport React, { Component, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport FormData from 'form-data'; \n\nconst ViewOrgs = props =>{\n    const[gotOrganizations, setGotOrganizations] = useState([])\n    useEffect (()=>{\n\n        let token = localStorage.getItem('token')\n        props.onFetchOrganizations();\n    },[]);\n    \n    \n    let sidebar = <Sidebar/>;\n    let navbar =  <Navbar name ={localStorage.getItem('name')}/>;\n    let orgzs;\n    /*\n    if ( !props.loading ) {\n        let organizationsArr= props.state;\n        for (let i=0;i<organizationsArr.length;i++){\n            console.log(i);\n            setGotOrganizations.push({\n                name: organizationsArr[i].name,\n                owner: organizationsArr[i].owner,\n                OrgId: organizationsArr[i].id\n            });\n         console.log('EVENT NAME',gotOrganizations) \n        }\n    \n   orgzs = gotOrganizations.map( event => (\n        <button name=\"componentButton\" >\n        <div className=\"col-md-6 col-lg-4 col-xl-3\">\n          <figure className=\"snip1527\" >\n            <div className=\"image\"><img src={require(\"./new_img.jpg\")}/></div>\n            <figcaption>\n              <div className=\"date\"><span className=\"day\">GO</span><span className=\"month\">FUND!</span></div>\n              <h3>NAME: {event.name}</h3>\n              <h3>OWNER: {event.name}</h3>\n              <h3>Organization ID :{event.name}</h3>\n            </figcaption>\n            <a ></a>\n          </figure>\n        </div>\n        </button>\n        ))\n    }*/\n    return(\n        <div className=\"myfunds\">\n            {navbar}\n            {sidebar}\n           // {orgzs}\n        </div>\n\n    )\n\n   \n    \n    \n}\nconst mapAllOrganizationsDispatchToProps =dispatch => {\n  \n    return{\n        onFetchOrganizations:(token) =>dispatch(actions.fetchOrganizations(token)),\n        //onFetchOneEvents:(OrganizationId)=>dispatch(actions.fetchOneOrganizations(fundId))\n    };\n}\n\n\n//to access the errors and loading state \nconst mapStatetoProps = state =>{\n    console.log('main page vworg',state)\n    return {\n    organizations: state.organizations.organizations,\n    loading:state.organizations.loading,\n    token:state.auth.token\n    };\n};\n\n\nexport default connect(mapStatetoProps, mapAllOrganizationsDispatchToProps)(ViewOrgs);\n"]},"metadata":{},"sourceType":"module"}