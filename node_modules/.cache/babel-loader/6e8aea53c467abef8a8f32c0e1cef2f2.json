{"ast":null,"code":"import * as actionTypes from './ActionTypes/actionTypesSignIn';\nimport axios from 'axios';\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = (token, userId, role, name) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token,\n    name: name,\n    userId: userId\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport const logout = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('name');\n  localStorage.removeItem('userId');\n  localStorage.removeItem('ExpirationDate');\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\nexport const checkAuthTimeout = () => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, 3600 * 1000); // token dies after an hour\n  };\n};\nexport const auth = (email, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    const authData = {\n      username: email,\n      password: password\n    };\n    console.log('SENT');\n    let url = 'http://127.0.0.1:8000/login/';\n    axios.post(url, authData).then(response => {\n      console.log('Data came back!');\n      console.log(response);\n      const ExpirationDate = new Date(new Date().getTime() + 3600000);\n      localStorage.setItem('token', response.data.token); //localStorage.setItem('role',response.data.role)\n\n      localStorage.setItem('name', authData.email); //localStorage.setItem('userId',response.data.userId)\n      //localStorage.setItem('ExpirationDate',ExpirationDate)\n\n      dispatch(authSuccess(response.data.token, authData.name));\n    }).catch(err => {\n      console.log(err.response.data);\n      dispatch(authFail(err.response.data));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/nitish/Documents/GitHub/RBAC/React-app/rbac-front/src/Store/Actions/auth.js"],"names":["actionTypes","axios","authStart","type","AUTH_START","authSuccess","token","userId","role","name","AUTH_SUCCESS","authFail","error","AUTH_FAIL","logout","localStorage","removeItem","AUTH_LOGOUT","checkAuthTimeout","dispatch","setTimeout","auth","email","password","authData","username","console","log","url","post","then","response","ExpirationDate","Date","getTime","setItem","data","catch","err"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,iCAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC3B,SAAO;AACHC,IAAAA,IAAI,EAAEH,WAAW,CAACI;AADf,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAOC,MAAP,EAAcC,IAAd,EAAmBC,IAAnB,KAA4B;AACnD,SAAO;AACHN,IAAAA,IAAI,EAAEH,WAAW,CAACU,YADf;AAEHJ,IAAAA,KAAK,EAAEA,KAFJ;AAGHG,IAAAA,IAAI,EAACA,IAHF;AAIHF,IAAAA,MAAM,EAACA;AAJJ,GAAP;AAMH,CAPM;AASP,OAAO,MAAMI,QAAQ,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHT,IAAAA,IAAI,EAAEH,WAAW,CAACa,SADf;AAEHD,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,MAAM,GAAE,MAAI;AACrBC,EAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACAD,EAAAA,YAAY,CAACC,UAAb,CAAwB,MAAxB;AACAD,EAAAA,YAAY,CAACC,UAAb,CAAwB,QAAxB;AACAD,EAAAA,YAAY,CAACC,UAAb,CAAwB,gBAAxB;AAEA,SAAM;AAEFb,IAAAA,IAAI,EAACH,WAAW,CAACiB;AAFf,GAAN;AAIH,CAVM;AAWP,OAAO,MAAMC,gBAAgB,GAAE,MAAI;AAC/B,SAAOC,QAAQ,IAAG;AACdC,IAAAA,UAAU,CAAC,MAAI;AACXD,MAAAA,QAAQ,CAACL,MAAM,EAAP,CAAR;AACH,KAFS,EAER,OAAK,IAFG,CAAV,CADc,CAGF;AACf,GAJD;AAKH,CANM;AAOP,OAAO,MAAMO,IAAI,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACrC,SAAOJ,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACjB,SAAS,EAAV,CAAR;AACA,UAAMsB,QAAQ,GAAE;AACZC,MAAAA,QAAQ,EAACH,KADG;AAEZC,MAAAA,QAAQ,EAACA;AAFG,KAAhB;AAIAG,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,QAAIC,GAAG,GAAE,8BAAT;AACA3B,IAAAA,KAAK,CAAC4B,IAAN,CAAWD,GAAX,EAAeJ,QAAf,EAECM,IAFD,CAEMC,QAAQ,IAAE;AACZL,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYI,QAAZ;AACA,YAAMC,cAAc,GAAG,IAAIC,IAAJ,CAAS,IAAIA,IAAJ,GAAWC,OAAX,KAAsB,OAA/B,CAAvB;AACAnB,MAAAA,YAAY,CAACoB,OAAb,CAAqB,OAArB,EAA6BJ,QAAQ,CAACK,IAAT,CAAc9B,KAA3C,EAJY,CAKZ;;AACAS,MAAAA,YAAY,CAACoB,OAAb,CAAqB,MAArB,EAA4BX,QAAQ,CAACF,KAArC,EANY,CAOZ;AACA;;AACAH,MAAAA,QAAQ,CAACd,WAAW,CAAC0B,QAAQ,CAACK,IAAT,CAAc9B,KAAf,EAAqBkB,QAAQ,CAACf,IAA9B,CAAZ,CAAR;AACH,KAZD,EAaC4B,KAbD,CAaOC,GAAG,IAAE;AACRZ,MAAAA,OAAO,CAACC,GAAR,CAAYW,GAAG,CAACP,QAAJ,CAAaK,IAAzB;AACAjB,MAAAA,QAAQ,CAACR,QAAQ,CAAC2B,GAAG,CAACP,QAAJ,CAAaK,IAAd,CAAT,CAAR;AACH,KAhBD;AAiBH,GAzBD;AA0BH,CA3BM","sourcesContent":["import * as actionTypes from './ActionTypes/actionTypesSignIn';\nimport axios from 'axios';\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    };\n};\n\nexport const authSuccess = (token,userId,role,name) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        token: token,\n        name:name,\n        userId:userId\n    };\n};\n\nexport const authFail = (error) => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    };\n};\n\nexport const logout =()=>{\n    localStorage.removeItem('token')\n    localStorage.removeItem('name')\n    localStorage.removeItem('userId')\n    localStorage.removeItem('ExpirationDate')\n\n    return{\n        \n        type:actionTypes.AUTH_LOGOUT\n    };\n};\nexport const checkAuthTimeout =()=>{\n    return dispatch =>{\n        setTimeout(()=>{\n            dispatch(logout());\n        },3600*1000)// token dies after an hour\n    }\n}\nexport const auth = (email, password) => {\n    return dispatch => {\n        dispatch(authStart());\n        const authData ={\n            username:email,\n            password:password,\n        }\n        console.log('SENT');\n        let url= 'http://127.0.0.1:8000/login/'\n        axios.post(url,authData)\n        \n        .then(response=>{\n            console.log('Data came back!');\n            console.log(response);\n            const ExpirationDate = new Date(new Date().getTime()+ 3600000)\n            localStorage.setItem('token',response.data.token)\n            //localStorage.setItem('role',response.data.role)\n            localStorage.setItem('name',authData.email)\n            //localStorage.setItem('userId',response.data.userId)\n            //localStorage.setItem('ExpirationDate',ExpirationDate)\n            dispatch(authSuccess(response.data.token,authData.name))\n        })\n        .catch(err=>{\n            console.log(err.response.data);\n            dispatch(authFail(err.response.data))\n        })\n    };\n};"]},"metadata":{},"sourceType":"module"}