{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nitish/Desktop/rbac/React-app/rbac-front/src/Containers/Dashboard/ViewRole/ViewRole.js\",\n    _s = $RefreshSig$();\n\nimport * as actions from '../../../Store/Actions/Index';\nimport { Redirect } from 'react-router-dom';\nimport Navbar from '../../../Components/Navbar/Navbar';\nimport Sidebar from '../../../Components/Sidebar/Sidebar';\nimport React, { Component, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport FormData from 'form-data';\nimport MyOrgs from '../../../Components/MyOrg/MyOrgs';\nimport classes from './ViewRole.css';\n\nconst ViewOrgs = props => {\n  _s();\n\n  useEffect(() => {\n    let token = localStorage.getItem('token');\n    props.onFetchAllRole(token);\n  }, []);\n\n  let sidebar = /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 19\n  }, this);\n\n  let navbar = /*#__PURE__*/_jsxDEV(Navbar, {\n    name: localStorage.getItem('name')\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 19\n  }, this);\n\n  let count = 0;\n\n  let orgzs = /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 17\n  }, this);\n\n  if (!props.loading) {\n    orgzs = props.organizations.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"reposition\",\n      children: /*#__PURE__*/_jsxDEV(MyOrgs, {\n        name: event.name,\n        owner: event.owner,\n        orgId: event.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [navbar, sidebar, /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"fund-pics row\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ViewOrgs, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ViewOrgs;\n\nconst mapAllOrganizationsDispatchToProps = dispatch => {\n  return {\n    onFetchAllRole: token => dispatch(actions.fetchAllRole(token)) //onFetchOneEvents:(OrganizationId)=>dispatch(actions.fetchOneOrganizations(fundId))\n\n  };\n}; //to access the errors and loading state \n\n\nconst mapStatetoProps = state => {\n  console.log('main page vwrole', state);\n  return {\n    organizations: state.organizations.organizations,\n    loading: state.organizations.loading,\n    token: state.auth.token\n  };\n};\n\nexport default connect(mapStatetoProps, mapAllOrganizationsDispatchToProps)(ViewOrgs);\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewOrgs\");","map":{"version":3,"sources":["/Users/nitish/Desktop/rbac/React-app/rbac-front/src/Containers/Dashboard/ViewRole/ViewRole.js"],"names":["actions","Redirect","Navbar","Sidebar","React","Component","useState","useEffect","connect","FormData","MyOrgs","classes","ViewOrgs","props","token","localStorage","getItem","onFetchAllRole","sidebar","navbar","count","orgzs","loading","organizations","map","event","name","owner","id","mapAllOrganizationsDispatchToProps","dispatch","fetchAllRole","mapStatetoProps","state","console","log","auth"],"mappings":";;;;;AAAA,OAAO,KAAKA,OAAZ,MAAyB,8BAAzB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,OAAP,MAAoB,qCAApB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,MAAP,MAAmB,kCAAnB;AACA,OAAOC,OAAP,MAAoB,gBAApB;;AACA,MAAMC,QAAQ,GAAGC,KAAK,IAAG;AAAA;;AAErBN,EAAAA,SAAS,CAAE,MAAI;AACX,QAAIO,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AACAH,IAAAA,KAAK,CAACI,cAAN,CAAqBH,KAArB;AACH,GAHQ,EAGP,EAHO,CAAT;;AAKA,MAAII,OAAO,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAAd;;AACA,MAAIC,MAAM,gBAAI,QAAC,MAAD;AAAQ,IAAA,IAAI,EAAGJ,YAAY,CAACC,OAAb,CAAqB,MAArB;AAAf;AAAA;AAAA;AAAA;AAAA,UAAd;;AACA,MAAII,KAAK,GAAG,CAAZ;;AACA,MAAIC,KAAK,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAAZ;;AACA,MAAG,CAACR,KAAK,CAACS,OAAV,EAAkB;AAEdD,IAAAA,KAAK,GAAER,KAAK,CAACU,aAAN,CAAoBC,GAApB,CAAwBC,KAAK,iBACpC;AAAK,MAAA,KAAK,EAAC,YAAX;AAAA,6BACA,QAAC,MAAD;AACI,QAAA,IAAI,EAAEA,KAAK,CAACC,IADhB;AAEI,QAAA,KAAK,EAAED,KAAK,CAACE,KAFjB;AAGI,QAAA,KAAK,EAAIF,KAAK,CAACG;AAHnB;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADO,CAAP;AASH;;AAED,sBACI;AAAA,eACKT,MADL,EAEKD,OAFL,eAGI;AAAK,MAAA,KAAK,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQC,CAhCL;;GAAMN,Q;;KAAAA,Q;;AAoCN,MAAMiB,kCAAkC,GAAEC,QAAQ,IAAI;AAElD,SAAM;AACFb,IAAAA,cAAc,EAAEH,KAAD,IAAUgB,QAAQ,CAAC9B,OAAO,CAAC+B,YAAR,CAAqBjB,KAArB,CAAD,CAD/B,CAEF;;AAFE,GAAN;AAIH,CAND,C,CASA;;;AACA,MAAMkB,eAAe,GAAGC,KAAK,IAAG;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAA+BF,KAA/B;AACA,SAAO;AACPV,IAAAA,aAAa,EAAEU,KAAK,CAACV,aAAN,CAAoBA,aAD5B;AAEPD,IAAAA,OAAO,EAACW,KAAK,CAACV,aAAN,CAAoBD,OAFrB;AAGPR,IAAAA,KAAK,EAACmB,KAAK,CAACG,IAAN,CAAWtB;AAHV,GAAP;AAKH,CAPD;;AAUA,eAAeN,OAAO,CAACwB,eAAD,EAAkBH,kCAAlB,CAAP,CAA6DjB,QAA7D,CAAf","sourcesContent":["import * as actions from '../../../Store/Actions/Index'; \nimport {Redirect} from 'react-router-dom';\nimport Navbar from '../../../Components/Navbar/Navbar';\nimport Sidebar from '../../../Components/Sidebar/Sidebar';\nimport React, { Component, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport FormData from 'form-data'; \nimport MyOrgs from '../../../Components/MyOrg/MyOrgs';\nimport classes from './ViewRole.css';\nconst ViewOrgs = props =>{\n   \n    useEffect (()=>{\n        let token = localStorage.getItem('token')\n        props.onFetchAllRole(token);\n    },[]);\n\n    let sidebar = <Sidebar/>;\n    let navbar =  <Navbar name ={localStorage.getItem('name')}/>;\n    let count = 0;\n    let orgzs=  <Sidebar/>;\n    if(!props.loading){\n\n        orgzs= props.organizations.map(event =>(\n        <div class=\"reposition\">\n        <MyOrgs\n            name={event.name}\n            owner={event.owner}\n            orgId = {event.id}\n              />\n        </div>\n           ))\n    }\n  \n    return(\n        <div>\n            {navbar}\n            {sidebar}\n            <div class=\"fund-pics row\">\n            </div>\n    </div>)\n\n    }\n    \n    \n\nconst mapAllOrganizationsDispatchToProps =dispatch => {\n  \n    return{\n        onFetchAllRole:(token) =>dispatch(actions.fetchAllRole(token)),\n        //onFetchOneEvents:(OrganizationId)=>dispatch(actions.fetchOneOrganizations(fundId))\n    };\n}\n\n\n//to access the errors and loading state \nconst mapStatetoProps = state =>{\n    console.log('main page vwrole',state)\n    return {\n    organizations: state.organizations.organizations,\n    loading:state.organizations.loading,\n    token:state.auth.token\n    };\n};\n\n\nexport default connect(mapStatetoProps, mapAllOrganizationsDispatchToProps)(ViewOrgs);\n"]},"metadata":{},"sourceType":"module"}