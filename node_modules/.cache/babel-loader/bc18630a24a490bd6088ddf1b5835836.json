{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nitish/Desktop/rbac/React-app/rbac-front/src/Containers/Dashboard/CreateOrg/CreateOrg.js\",\n    _s = $RefreshSig$();\n\nimport * as actions from '../../../Store/Actions/Index';\nimport { Redirect } from 'react-router-dom';\nimport Input from '../../../Components/UI/Input/input';\nimport Navbar from '../../../Components/Navbar/Navbar';\nimport Sidebar from '../../../Components/Sidebar/Sidebar';\nimport React, { Component, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport FormData from 'form-data';\nimport OneRole from '../../../Components/OneRole/OneRole';\nimport classes from './CreateOrg.css';\n\nconst CreateOrgs = props => {\n  _s();\n\n  //Input Element States\n  let newUserArr = [];\n  const [selectedUsersArr, setSelectedUsersArr] = useState([]);\n  const [isPermLod, SetIsPermLod] = useState(true);\n  const [createOrgForm, SetcreateOrgForm] = useState({\n    name: {\n      elementType: 'input',\n      elementConfig: {\n        className: 'formcontrol',\n        type: 'text',\n        placeholder: 'Organization Name'\n      },\n      value: '',\n      validation: {\n        required: true\n      },\n      valid: false,\n      touched: false\n    },\n    email: {\n      elementType: 'input',\n      elementConfig: {\n        className: 'formcontrol',\n        type: 'text',\n        placeholder: 'Email ID'\n      },\n      value: '',\n      validation: {\n        required: true,\n        isEmail: true\n      },\n      valid: false,\n      touched: false\n    },\n    Owner: {\n      label: 'Owner',\n      elementType: 'dropdown',\n      elementConfig: {\n        className: 'formcontrol'\n      },\n      options: '',\n      value: 0,\n      valid: false,\n      touched: false\n    },\n    Users: {\n      label: 'Users',\n      elementType: 'select-multiple',\n      elementConfig: {\n        className: 'formcontrol',\n        options: []\n      },\n      options: '',\n      value: [],\n      valid: false,\n      touched: false\n    },\n    permisson_loaded: {\n      label: 'Permission Loaded',\n      elementType: 'check-box',\n      value: isPermLod\n    }\n  }); //To load users\n\n  useEffect(() => {\n    let token = localStorage.getItem('token');\n    props.onFetchAllUsers(token);\n  }, []); //To check Validity\n\n  const checkValidity = (value, rules) => {\n    let isValid = true;\n\n    if (!rules) {\n      return true;\n    }\n\n    if (rules.required) {\n      isValid = value.trim() !== '' && isValid;\n    }\n\n    if (rules.minLength) {\n      isValid = value.length >= rules.minLength && isValid;\n    }\n\n    if (rules.maxLength) {\n      isValid = value.length <= rules.maxLength && isValid;\n    }\n\n    if (rules.isEmail) {\n      const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n      isValid = pattern.test(value) && isValid;\n    }\n\n    if (rules.isNumeric) {\n      const pattern = /^\\d+$/;\n      isValid = pattern.test(value) && isValid;\n    }\n\n    return isValid;\n  }; //Input Change Handler\n\n\n  const inputChangedHandler = (event, controlName) => {\n    console.log('Change Handler', controlName);\n\n    if (controlName == \"permisson_loaded\") {\n      console.log('ENtere permlod');\n      SetIsPermLod(!isPermLod);\n      const updatedControls = { ...createOrgForm,\n        [controlName]: { ...createOrgForm[controlName],\n          value: isPermLod\n        }\n      };\n      SetcreateOrgForm(updatedControls);\n    } else if (controlName == \"Users\") {\n      console.log('User');\n\n      if (!selectedUsersArr.includes(parseInt(event.target.value))) {\n        console.log(\"This is the includes array\", selectedUsersArr.includes(parseInt(event.target.value)));\n        setSelectedUsersArr([...selectedUsersArr, parseInt(event.target.value) + 1]);\n        console.log('full User array', selectedUsersArr);\n        newUserArr.push(...selectedUsersArr);\n        newUserArr.push(parseInt(event.target.value) + 1);\n        console.log('newUSerArr', newUserArr);\n        const updatedControls = { ...createOrgForm,\n          [controlName]: { ...createOrgForm[controlName],\n            value: newUserArr,\n            valid: checkValidity(event.target.value, createOrgForm[controlName].validation),\n            touched: true\n          }\n        };\n        SetcreateOrgForm(updatedControls);\n      }\n    } else if (controlName == \"Owner\") {\n      const updatedControls = { ...createOrgForm,\n        [controlName]: { ...createOrgForm[controlName],\n          value: parseInt(event.target.value) + 1,\n          valid: checkValidity(event.target.value, createOrgForm[controlName].validation),\n          touched: true\n        }\n      };\n      SetcreateOrgForm(updatedControls);\n    } else {\n      const updatedControls = { ...createOrgForm,\n        [controlName]: { ...createOrgForm[controlName],\n          value: event.target.value,\n          valid: checkValidity(event.target.value, createOrgForm[controlName].validation),\n          touched: true\n        }\n      };\n      SetcreateOrgForm(updatedControls);\n    }\n\n    console.log(\"THIS IS STATE VAR\", isPermLod);\n    console.log(\"After submit\", createOrgForm);\n  };\n\n  let sidebar = /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 19\n  }, this);\n\n  let form = /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 16\n  }, this);\n\n  let navbar = /*#__PURE__*/_jsxDEV(Navbar, {\n    name: localStorage.getItem('name')\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 19\n  }, this);\n\n  let count = 0;\n\n  const CreateOrgsubmitHandler = event => {\n    console.log(\"While submitting\", event);\n    console.log(\"name:\", createOrgForm);\n    console.log(\"email:\", createOrgForm.email.value);\n    console.log(\"owner:\", createOrgForm.Owner.value);\n    console.log(\"users:\", createOrgForm.Users.value);\n    console.log(\"perm:\", createOrgForm.permisson_loaded.value);\n    let token = localStorage.getItem('token');\n    event.preventDefault();\n    props.onCreateOrg(createOrgForm.name.value, createOrgForm.email.value, createOrgForm.Owner.value, createOrgForm.Users.value, createOrgForm.permisson_loaded.value, token);\n  };\n\n  if (!props.loading) {\n    console.log(\"props.loading\", props.loading);\n    const formElementsArray = []; //array for input elements\n\n    for (let key in createOrgForm) {\n      // render input elements from array\n      formElementsArray.push({\n        id: key,\n        config: createOrgForm[key]\n      });\n    }\n\n    console.log(\"formElementsArray\", formElementsArray);\n    form = formElementsArray.map(formElement => /*#__PURE__*/_jsxDEV(Input, {\n      label: formElement.config.label,\n      className: formElement.config.className,\n      elementType: formElement.config.elementType,\n      elementConfig: formElement.config.elementConfig,\n      value: formElement.config.value,\n      options: props.AllUsers,\n      invalid: !formElement.config.valid,\n      shouldValidate: formElement.config.validation,\n      touched: formElement.config.touched,\n      changed: event => inputChangedHandler(event, formElement.id)\n    }, formElement.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [navbar, sidebar, /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"CrtOrgForm\",\n      children: [form, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: CreateOrgsubmitHandler,\n        children: \"SUBMIT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 225,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateOrgs, \"vpanphsjhKAXDZMmUG4lro4Jdt4=\");\n\n_c = CreateOrgs;\n\nconst mapAllOrganizationsDispatchToProps = dispatch => {\n  return {\n    onFetchAllUsers: token => dispatch(actions.fetchAllUsers(token)),\n    onCreateOrg: (name, email, owner, users, permissions_loaded, token) => dispatch(actions.createOrg(name, email, owner, users, permissions_loaded, token))\n  };\n}; //to access the errors and loading state \n\n\nconst mapStatetoProps = state => {\n  console.log('main page crtorg', state);\n  return {\n    AllUsers: state.AllUsers.AllUsers,\n    loading: state.AllUsers.loading,\n    token: state.auth.token\n  };\n};\n\nexport default connect(mapStatetoProps, mapAllOrganizationsDispatchToProps)(CreateOrgs);\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateOrgs\");","map":{"version":3,"sources":["/Users/nitish/Desktop/rbac/React-app/rbac-front/src/Containers/Dashboard/CreateOrg/CreateOrg.js"],"names":["actions","Redirect","Input","Navbar","Sidebar","React","Component","useState","useEffect","connect","FormData","OneRole","classes","CreateOrgs","props","newUserArr","selectedUsersArr","setSelectedUsersArr","isPermLod","SetIsPermLod","createOrgForm","SetcreateOrgForm","name","elementType","elementConfig","className","type","placeholder","value","validation","required","valid","touched","email","isEmail","Owner","label","options","Users","permisson_loaded","token","localStorage","getItem","onFetchAllUsers","checkValidity","rules","isValid","trim","minLength","length","maxLength","pattern","test","isNumeric","inputChangedHandler","event","controlName","console","log","updatedControls","includes","parseInt","target","push","sidebar","form","navbar","count","CreateOrgsubmitHandler","preventDefault","onCreateOrg","loading","formElementsArray","key","id","config","map","formElement","AllUsers","mapAllOrganizationsDispatchToProps","dispatch","fetchAllUsers","owner","users","permissions_loaded","createOrg","mapStatetoProps","state","auth"],"mappings":"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","sourcesContent":["import * as actions from '../../../Store/Actions/Index'; \nimport {Redirect} from 'react-router-dom';\nimport Input from '../../../Components/UI/Input/input';\nimport Navbar from '../../../Components/Navbar/Navbar';\nimport Sidebar from '../../../Components/Sidebar/Sidebar';\nimport React, { Component, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport FormData from 'form-data'; \nimport OneRole from '../../../Components/OneRole/OneRole';\nimport classes from './CreateOrg.css';\nconst CreateOrgs = props =>{\n    //Input Element States\n    let newUserArr=[];\n    const [selectedUsersArr,setSelectedUsersArr]=useState([])\n    const [isPermLod,SetIsPermLod]= useState(true);\n    const [createOrgForm,SetcreateOrgForm]= useState({\n    name: {\n        elementType: 'input',\n        elementConfig: {\n            className:'formcontrol',\n            type: 'text',\n            placeholder: 'Organization Name'\n        },\n        value: '',\n        validation: {\n            required: true,\n        },\n        valid: false,\n        touched: false\n    },\n    email: {\n        elementType: 'input',\n        elementConfig: {\n            className:'formcontrol',\n            type: 'text',\n            placeholder: 'Email ID'\n        },\n        value: '',\n        validation: {\n            required: true,\n            isEmail: true\n        },\n        valid: false,\n        touched: false\n    },\n    Owner: {\n        label:'Owner',\n        elementType: 'dropdown',\n        elementConfig: {\n            className:'formcontrol',\n            \n        },\n        options:'',\n        value: 0,\n        valid: false,\n        touched: false\n    },\n    Users: {\n        label:'Users',\n        elementType: 'select-multiple',\n        elementConfig: {\n            className:'formcontrol',\n            options:[]\n        },\n        options:'',\n        value: [],\n        valid: false,\n        touched: false\n    },\n    permisson_loaded:{\n        label: 'Permission Loaded',\n        elementType: 'check-box',\n        value: isPermLod\n    }\n   })\n\n   //To load users\n    useEffect (()=>{\n        let token = localStorage.getItem('token')\n        props.onFetchAllUsers(token);\n    },[]);\n\n    //To check Validity\n    const checkValidity=(value, rules) =>{\n        let isValid = true;\n        if (!rules) {\n            return true;\n        }\n        \n        if (rules.required) {\n            isValid = value.trim() !== '' && isValid;\n        }\n\n        if (rules.minLength) {\n            isValid = value.length >= rules.minLength && isValid\n        }\n\n        if (rules.maxLength) {\n            isValid = value.length <= rules.maxLength && isValid\n        }\n\n        if (rules.isEmail) {\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n            isValid = pattern.test(value) && isValid\n        }\n\n        if (rules.isNumeric) {\n            const pattern = /^\\d+$/;\n            isValid = pattern.test(value) && isValid\n        }\n\n        return isValid;\n    }\n\n    //Input Change Handler\n    const inputChangedHandler = (event, controlName) => {\n        console.log('Change Handler',controlName)\n        if(controlName==\"permisson_loaded\"){\n            console.log('ENtere permlod')\n            SetIsPermLod(!isPermLod);\n            const updatedControls = {\n                ...createOrgForm,\n                [controlName]: {\n                    ...createOrgForm[controlName],\n                    value: isPermLod,\n                }\n            };\n            \n            SetcreateOrgForm(updatedControls);\n\n        }\n        else if(controlName==\"Users\"){\n        console.log('User')\n        if(!selectedUsersArr.includes(parseInt(event.target.value))){\n            console.log(\"This is the includes array\",selectedUsersArr.includes(parseInt(event.target.value)));\n            setSelectedUsersArr([...selectedUsersArr,(parseInt(event.target.value)+1)])\n            console.log('full User array',selectedUsersArr)\n            newUserArr.push(...selectedUsersArr);\n            newUserArr.push((parseInt(event.target.value))+1);\n            console.log('newUSerArr',newUserArr);\n            const updatedControls = {\n            ...createOrgForm,\n            [controlName]: {\n                ...createOrgForm[controlName],\n                value: newUserArr,\n                valid: checkValidity(event.target.value, createOrgForm[controlName].validation),\n                touched: true\n            }  \n        };\n        SetcreateOrgForm(updatedControls);\n        }\n    }else if(controlName==\"Owner\"){ \n        \n        const updatedControls = {\n        ...createOrgForm,\n        [controlName]: {\n            ...createOrgForm[controlName],\n            value: ((parseInt(event.target.value))+1),\n            valid: checkValidity(event.target.value, createOrgForm[controlName].validation),\n            touched: true\n        }\n    };\n    SetcreateOrgForm(updatedControls);}\n    else{\n        const updatedControls = {\n            ...createOrgForm,\n            [controlName]: {\n                ...createOrgForm[controlName],\n                value: event.target.value,\n                valid: checkValidity(event.target.value, createOrgForm[controlName].validation),\n                touched: true\n            }\n        };\n        SetcreateOrgForm(updatedControls);\n    }\n    console.log(\"THIS IS STATE VAR\",isPermLod);\n       console.log(\"After submit\",createOrgForm);\n    }\n\n    let sidebar = <Sidebar/>;\n    let form = <Sidebar/>;\n    let navbar =  <Navbar name ={localStorage.getItem('name')}/>;\n    let count = 0;\n    const CreateOrgsubmitHandler= (event) => {\n        console.log(\"While submitting\",event);\n        console.log(\"name:\",createOrgForm);\n        console.log(\"email:\",createOrgForm.email.value);\n        console.log(\"owner:\",createOrgForm.Owner.value);\n        console.log(\"users:\",createOrgForm.Users.value);\n        console.log(\"perm:\",createOrgForm.permisson_loaded.value);\n        \n            let token = localStorage.getItem('token')\n            event.preventDefault();\n            props.onCreateOrg(createOrgForm.name.value,createOrgForm.email.value, createOrgForm.Owner.value,createOrgForm.Users.value,createOrgForm.permisson_loaded.value,token);\n        \n    }\n\n    if(!props.loading){\n        console.log(\"props.loading\",props.loading)\n    const formElementsArray = []; //array for input elements\n        for ( let key in createOrgForm ) {  // render input elements from array\n            formElementsArray.push( {\n                id: key,\n                config: createOrgForm[key]\n            });\n        }\n    console.log(\"formElementsArray\",formElementsArray)\n        form = formElementsArray.map( formElement => (\n            <Input\n                label={formElement.config.label}\n                key={formElement.id}\n                className={formElement.config.className}\n                elementType={formElement.config.elementType}\n                elementConfig={formElement.config.elementConfig}\n                value={formElement.config.value}\n                options = {props.AllUsers}\n                invalid={!formElement.config.valid}\n                shouldValidate={formElement.config.validation}\n                touched={formElement.config.touched}\n                changed={( event ) => inputChangedHandler( event, formElement.id )} />\n        ) );\n        }\n    \n    return(\n        <div>\n            {navbar}\n            {sidebar}\n            <form className=\"CrtOrgForm\" >\n                {form}\n                <button onClick={CreateOrgsubmitHandler}>SUBMIT</button>\n            </form>\n    </div>)\n\n    }\n    \n    \n\nconst mapAllOrganizationsDispatchToProps =dispatch => {\n  \n    return{\n        onFetchAllUsers:(token) =>dispatch(actions.fetchAllUsers(token)),\n        onCreateOrg:(name,email,owner,users,permissions_loaded,token)=>dispatch(actions.createOrg(name,email,owner,users,permissions_loaded,token))\n    };\n}\n\n\n//to access the errors and loading state \nconst mapStatetoProps = state =>{\n    console.log('main page crtorg',state)\n    return {\n    AllUsers: state.AllUsers.AllUsers,\n    loading:state.AllUsers.loading,\n    token:state.auth.token\n    };\n};\n\n\nexport default connect(mapStatetoProps, mapAllOrganizationsDispatchToProps)(CreateOrgs);\n"]},"metadata":{},"sourceType":"module"}