{"ast":null,"code":"//TO GET ALL ORGANIZATIONS\nimport * as actionTypes from './ActionTypes/actionTypesAllGetUsers';\nimport axios from 'axios';\nexport const fetchAllUsersSuccess = AllRoles => {\n  return {\n    type: actionTypes.GET_ALL_USERS_SUCCESS,\n    AllUsers: AllUsers\n  };\n};\nexport const fetchAllUsersFail = error => {\n  return {\n    type: actionTypes.GET_ALL_USERS_FAIL,\n    error: error\n  };\n};\nexport const fetchAllUsersStart = () => {\n  return {\n    type: actionTypes.GET_ALL_USERS_START\n  };\n};\nexport const fetchAllUsers = token => {\n  return dispatch => {\n    dispatch(fetchAllUsersStart());\n    console.log('GOT DATA');\n    let config = {\n      headers: {\n        'Authorization': 'Token ' + token\n      }\n    };\n    axios.get('http://localhost:8000/router/profile/', config).then(res => {\n      console.log(\"NEWWW RESPONSE\", res.data);\n      const fetchedRoles = [];\n      /*\n      for ( let key in res.data) {\n          //console.log(res.data.fundraiser[key],key)\n          fetchedRoles.push( {\n              ...res.data[key],\n              id: key\n          } );\n      }\n      dispatch(fetchAllUsersSuccess(fetchedRoles));\n      console.log(\"FETCHED EVENTS\",fetchedRoles); */\n    }).catch(err => {\n      dispatch(fetchAllUsersFail(err));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/nitish/Desktop/rbac/React-app/rbac-front/src/Store/Actions/getAllUsers.js"],"names":["actionTypes","axios","fetchAllUsersSuccess","AllRoles","type","GET_ALL_USERS_SUCCESS","AllUsers","fetchAllUsersFail","error","GET_ALL_USERS_FAIL","fetchAllUsersStart","GET_ALL_USERS_START","fetchAllUsers","token","dispatch","console","log","config","headers","get","then","res","data","fetchedRoles","catch","err"],"mappings":"AAAA;AACA,OAAO,KAAKA,WAAZ,MAA6B,sCAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,oBAAoB,GAAGC,QAAD,IAAa;AAC5C,SAAO;AACHC,IAAAA,IAAI,EAAEJ,WAAW,CAACK,qBADf;AAEHC,IAAAA,QAAQ,EAAEA;AAFP,GAAP;AAIH,CALM;AAOP,OAAO,MAAMC,iBAAiB,GAAGC,KAAD,IAAU;AACtC,SAAO;AACHJ,IAAAA,IAAI,EAAEJ,WAAW,CAACS,kBADf;AAEHD,IAAAA,KAAK,EAACA;AAFH,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,kBAAkB,GAAE,MAAI;AACjC,SAAO;AACHN,IAAAA,IAAI,EAAEJ,WAAW,CAACW;AADf,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMC,aAAa,GAAGC,KAAD,IAAS;AACjC,SAAOC,QAAQ,IAAE;AACbA,IAAAA,QAAQ,CAACJ,kBAAkB,EAAnB,CAAR;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,QAAIC,MAAM,GAAG;AACTC,MAAAA,OAAO,EAAE;AACL,yBAAiB,WAAWL;AADvB;AADA,KAAb;AAKAZ,IAAAA,KAAK,CAACkB,GAAN,CAAU,uCAAV,EAAkDF,MAAlD,EACCG,IADD,CACMC,GAAG,IAAE;AACVN,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6BK,GAAG,CAACC,IAAjC;AACO,YAAMC,YAAY,GAAG,EAArB;AACA;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACS,KAdD,EAeCC,KAfD,CAeOC,GAAG,IAAE;AACRX,MAAAA,QAAQ,CAACP,iBAAiB,CAACkB,GAAD,CAAlB,CAAR;AACH,KAjBD;AAkBH,GA1BD;AA2BH,CA5BM","sourcesContent":["//TO GET ALL ORGANIZATIONS\nimport * as actionTypes from './ActionTypes/actionTypesAllGetUsers';\nimport axios from 'axios';\nexport const fetchAllUsersSuccess =(AllRoles) =>{\n    return {\n        type: actionTypes.GET_ALL_USERS_SUCCESS,\n        AllUsers: AllUsers\n    };\n};\n\nexport const fetchAllUsersFail =(error) =>{\n    return {\n        type: actionTypes.GET_ALL_USERS_FAIL,\n        error:error\n    };\n}\n\nexport const fetchAllUsersStart =()=>{\n    return {\n        type: actionTypes.GET_ALL_USERS_START\n    };\n}\n\nexport const fetchAllUsers =(token)=>{\n    return dispatch=>{\n        dispatch(fetchAllUsersStart());\n        console.log('GOT DATA');\n        let config = {\n            headers: {\n                'Authorization': 'Token ' + token\n            }\n          }\n        axios.get('http://localhost:8000/router/profile/',config)\n        .then(res=>{\n         console.log(\"NEWWW RESPONSE\",res.data)\n                const fetchedRoles = [];\n                /*\n                for ( let key in res.data) {\n                    //console.log(res.data.fundraiser[key],key)\n                    fetchedRoles.push( {\n                        ...res.data[key],\n                        id: key\n                    } );\n                }\n            dispatch(fetchAllUsersSuccess(fetchedRoles));\n            console.log(\"FETCHED EVENTS\",fetchedRoles); */\n        })\n        .catch(err=>{\n            dispatch(fetchAllUsersFail(err));\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}