{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nitish/Desktop/rbac/React-app/rbac-front/src/Containers/Dashboard/ViewOrg/ViewOrg.js\",\n    _s = $RefreshSig$();\n\nimport * as actions from '../../../Store/Actions/Index';\nimport { Redirect } from 'react-router-dom';\nimport Navbar from '../../../Components/Navbar/Navbar';\nimport Sidebar from '../../../Components/Sidebar/Sidebar';\nimport React, { Component, useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormData from 'form-data';\n\nconst ViewOrgs = props => {\n  _s();\n\n  const [gotOrganizations, setGotOrganizations] = useState([]);\n\n  const componentDidMount = props => {\n    let token = localStorage.getItem('token');\n    props.onFetchEvents(token);\n  };\n\n  let sidebar = /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 19\n  }, this);\n\n  let navbar = /*#__PURE__*/_jsxDEV(Navbar, {\n    name: localStorage.getItem('name')\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 19\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"myfunds\",\n    children: [navbar, sidebar]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ViewOrgs, \"lnrpxCeHH+9qEYQ0TqhjqL/COAc=\");\n\n_c = ViewOrgs;\n\nconst mapAllOrganizationsDispatchToProps = dispatch => {\n  return {\n    onFetchEvents: token => dispatch(actions.fetchOrganizations(token)) //onFetchOneEvents:(OrganizationId)=>dispatch(actions.fetchOneOrganizations(fundId))\n\n  };\n}; //to access the errors and loading state \n\n\nconst mapStatetoProps = state => {\n  console.log('main page', state);\n  return {\n    events: state.ViewOrgs,\n    token: state.auth.token\n  };\n};\n\nexport default connect(mapStatetoProps, mapAllOrganizationsDispatchToProps)(ViewOrgs);\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewOrgs\");","map":{"version":3,"sources":["/Users/nitish/Desktop/rbac/React-app/rbac-front/src/Containers/Dashboard/ViewOrg/ViewOrg.js"],"names":["actions","Redirect","Navbar","Sidebar","React","Component","useState","connect","FormData","ViewOrgs","props","gotOrganizations","setGotOrganizations","componentDidMount","token","localStorage","getItem","onFetchEvents","sidebar","navbar","mapAllOrganizationsDispatchToProps","dispatch","fetchOrganizations","mapStatetoProps","state","console","log","events","auth"],"mappings":";;;;;AAAA,OAAO,KAAKA,OAAZ,MAAyB,8BAAzB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,OAAP,MAAoB,qCAApB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAG;AAAA;;AACrB,QAAK,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CN,QAAQ,CAAC,EAAD,CAAvD;;AACA,QAAMO,iBAAiB,GAAEH,KAAK,IAAI;AAC9B,QAAII,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AAEAN,IAAAA,KAAK,CAACO,aAAN,CAAoBH,KAApB;AACH,GAJD;;AAMA,MAAII,OAAO,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAAd;;AACA,MAAIC,MAAM,gBAAI,QAAC,MAAD;AAAQ,IAAA,IAAI,EAAGJ,YAAY,CAACC,OAAb,CAAqB,MAArB;AAAf;AAAA;AAAA;AAAA;AAAA,UAAd;;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,eACKG,MADL,EAEKD,OAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CArBD;;GAAMT,Q;;KAAAA,Q;;AAsBN,MAAMW,kCAAkC,GAAEC,QAAQ,IAAI;AAElD,SAAM;AACFJ,IAAAA,aAAa,EAAEH,KAAD,IAAUO,QAAQ,CAACrB,OAAO,CAACsB,kBAAR,CAA2BR,KAA3B,CAAD,CAD9B,CAEF;;AAFE,GAAN;AAIH,CAND,C,CASA;;;AACA,MAAMS,eAAe,GAAGC,KAAK,IAAG;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBF,KAAxB;AACA,SAAO;AACPG,IAAAA,MAAM,EAACH,KAAK,CAACf,QADN;AAEPK,IAAAA,KAAK,EAACU,KAAK,CAACI,IAAN,CAAWd;AAFV,GAAP;AAIH,CAND;;AASA,eAAeP,OAAO,CAACgB,eAAD,EAAkBH,kCAAlB,CAAP,CAA6DX,QAA7D,CAAf","sourcesContent":["import * as actions from '../../../Store/Actions/Index'; \nimport {Redirect} from 'react-router-dom';\nimport Navbar from '../../../Components/Navbar/Navbar';\nimport Sidebar from '../../../Components/Sidebar/Sidebar';\nimport React, { Component, useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormData from 'form-data'; \n\nconst ViewOrgs = props =>{\n    const[gotOrganizations, setGotOrganizations] = useState([])\n    const componentDidMount= props => {\n        let token = localStorage.getItem('token')\n    \n        props.onFetchEvents(token);\n    };\n    \n    let sidebar = <Sidebar/>;\n    let navbar =  <Navbar name ={localStorage.getItem('name')}/>;\n    return(\n        <div className=\"myfunds\">\n            {navbar}\n            {sidebar}\n        </div>\n\n    )\n\n   \n    \n    \n}\nconst mapAllOrganizationsDispatchToProps =dispatch => {\n  \n    return{\n        onFetchEvents:(token) =>dispatch(actions.fetchOrganizations(token)),\n        //onFetchOneEvents:(OrganizationId)=>dispatch(actions.fetchOneOrganizations(fundId))\n    };\n}\n\n\n//to access the errors and loading state \nconst mapStatetoProps = state =>{\n    console.log('main page',state)\n    return {\n    events:state.ViewOrgs,\n    token:state.auth.token\n    };\n};\n\n\nexport default connect(mapStatetoProps, mapAllOrganizationsDispatchToProps)(ViewOrgs);\n"]},"metadata":{},"sourceType":"module"}