{"ast":null,"code":"//TO GET ALL ORGANIZATIONS\nimport * as actionTypes from './ActionTypes/actionTypesAllGetUsers';\nimport axios from 'axios';\nexport const fetchAllUsersSuccess = AllUsers => {\n  return {\n    type: actionTypes.GET_ALL_USERS_SUCCESS,\n    AllUsers: AllUsers\n  };\n};\nexport const fetchAllUsersFail = error => {\n  return {\n    type: actionTypes.GET_ALL_USERS_FAIL,\n    error: error\n  };\n};\nexport const fetchAllUsersStart = () => {\n  return {\n    type: actionTypes.GET_ALL_USERS_START\n  };\n};\nexport const fetchAllUsers = token => {\n  return dispatch => {\n    dispatch(fetchAllUsersStart());\n    console.log('GOT DATA');\n    let config = {\n      headers: {\n        'Authorization': 'Token ' + token\n      }\n    };\n    axios.get('http://localhost:8000/router/profile/', config).then(res => {\n      console.log(\"NEWWW RESPONSE\", res.data);\n      const fetchedUsers = [];\n\n      for (let key in res.data) {\n        //console.log(res.data.fundraiser[key],key)\n        fetchedUsers.push({ ...res.data[key],\n          id: key\n        });\n      }\n\n      dispatch(fetchAllUsersSuccess(fetchedUsers));\n      console.log(\"FETCHED EVENTS\", fetchedUsers);\n    }).catch(err => {\n      dispatch(fetchAllUsersFail(err));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/nitish/Desktop/rbac/React-app/rbac-front/src/Store/Actions/getAllUsers.js"],"names":["actionTypes","axios","fetchAllUsersSuccess","AllUsers","type","GET_ALL_USERS_SUCCESS","fetchAllUsersFail","error","GET_ALL_USERS_FAIL","fetchAllUsersStart","GET_ALL_USERS_START","fetchAllUsers","token","dispatch","console","log","config","headers","get","then","res","data","fetchedUsers","key","push","id","catch","err"],"mappings":"AAAA;AACA,OAAO,KAAKA,WAAZ,MAA6B,sCAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,oBAAoB,GAAGC,QAAD,IAAa;AAC5C,SAAO;AACHC,IAAAA,IAAI,EAAEJ,WAAW,CAACK,qBADf;AAEHF,IAAAA,QAAQ,EAAEA;AAFP,GAAP;AAIH,CALM;AAOP,OAAO,MAAMG,iBAAiB,GAAGC,KAAD,IAAU;AACtC,SAAO;AACHH,IAAAA,IAAI,EAAEJ,WAAW,CAACQ,kBADf;AAEHD,IAAAA,KAAK,EAACA;AAFH,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,kBAAkB,GAAE,MAAI;AACjC,SAAO;AACHL,IAAAA,IAAI,EAAEJ,WAAW,CAACU;AADf,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMC,aAAa,GAAGC,KAAD,IAAS;AACjC,SAAOC,QAAQ,IAAE;AACbA,IAAAA,QAAQ,CAACJ,kBAAkB,EAAnB,CAAR;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,QAAIC,MAAM,GAAG;AACTC,MAAAA,OAAO,EAAE;AACL,yBAAiB,WAAWL;AADvB;AADA,KAAb;AAKAX,IAAAA,KAAK,CAACiB,GAAN,CAAU,uCAAV,EAAkDF,MAAlD,EACCG,IADD,CACMC,GAAG,IAAE;AACVN,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6BK,GAAG,CAACC,IAAjC;AACO,YAAMC,YAAY,GAAG,EAArB;;AAEA,WAAM,IAAIC,GAAV,IAAiBH,GAAG,CAACC,IAArB,EAA2B;AACvB;AACAC,QAAAA,YAAY,CAACE,IAAb,CAAmB,EACf,GAAGJ,GAAG,CAACC,IAAJ,CAASE,GAAT,CADY;AAEfE,UAAAA,EAAE,EAAEF;AAFW,SAAnB;AAIH;;AACLV,MAAAA,QAAQ,CAACX,oBAAoB,CAACoB,YAAD,CAArB,CAAR;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6BO,YAA7B;AACH,KAdD,EAeCI,KAfD,CAeOC,GAAG,IAAE;AACRd,MAAAA,QAAQ,CAACP,iBAAiB,CAACqB,GAAD,CAAlB,CAAR;AACH,KAjBD;AAkBH,GA1BD;AA2BH,CA5BM","sourcesContent":["//TO GET ALL ORGANIZATIONS\nimport * as actionTypes from './ActionTypes/actionTypesAllGetUsers';\nimport axios from 'axios';\nexport const fetchAllUsersSuccess =(AllUsers) =>{\n    return {\n        type: actionTypes.GET_ALL_USERS_SUCCESS,\n        AllUsers: AllUsers\n    };\n};\n\nexport const fetchAllUsersFail =(error) =>{\n    return {\n        type: actionTypes.GET_ALL_USERS_FAIL,\n        error:error\n    };\n}\n\nexport const fetchAllUsersStart =()=>{\n    return {\n        type: actionTypes.GET_ALL_USERS_START\n    };\n}\n\nexport const fetchAllUsers =(token)=>{\n    return dispatch=>{\n        dispatch(fetchAllUsersStart());\n        console.log('GOT DATA');\n        let config = {\n            headers: {\n                'Authorization': 'Token ' + token\n            }\n          }\n        axios.get('http://localhost:8000/router/profile/',config)\n        .then(res=>{\n         console.log(\"NEWWW RESPONSE\",res.data)\n                const fetchedUsers = [];\n                \n                for ( let key in res.data) {\n                    //console.log(res.data.fundraiser[key],key)\n                    fetchedUsers.push( {\n                        ...res.data[key],\n                        id: key\n                    } );\n                }\n            dispatch(fetchAllUsersSuccess(fetchedUsers));\n            console.log(\"FETCHED EVENTS\",fetchedUsers); \n        })\n        .catch(err=>{\n            dispatch(fetchAllUsersFail(err));\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}