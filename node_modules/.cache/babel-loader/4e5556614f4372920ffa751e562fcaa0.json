{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/nitish/Desktop/rbac/React-app/rbac-front/src/Components/UI/Input/input.js\";\nimport React from 'react';\nimport classes from './input.css';\n\nconst input = props => {\n  let inputElement = null;\n  const inputClasses = [classes.InputElement];\n  console.log('THIS IS PROPS', props);\n\n  if (props.invalid && props.shouldValidate && props.touched) {\n    inputClasses.push(classes.Invalid);\n  }\n\n  switch (props.elementType) {\n    case 'input':\n      inputElement = /*#__PURE__*/_jsxDEV(\"input\", {\n        className: inputClasses.join(' '),\n        ...props.elementConfig,\n        value: props.value,\n        onChange: props.changed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 28\n      }, this);\n      break;\n\n    case 'textarea':\n      inputElement = /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: inputClasses.join(' '),\n        ...props.elementConfig,\n        value: props.value,\n        onChange: props.changed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 28\n      }, this);\n      break;\n\n    case 'dropdown':\n      inputElement = /*#__PURE__*/_jsxDEV(\"select\", {\n        className: inputClasses.join(' '),\n        value: props.value,\n        onChange: props.changed,\n        children: props.options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option.value,\n          children: option.displayValue\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this);\n      break;\n\n    case 'select-multiple':\n      inputElement = /*#__PURE__*/_jsxDEV(\"select\", {\n        className: inputClasses.join(' '),\n        value: props.value,\n        onChange: props.changed,\n        multiple: true,\n        children: props.options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option.value,\n          children: option.displayValue\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this);\n      break;\n\n    case 'check-box':\n      inputElement = /*#__PURE__*/_jsxDEV(\"checkbox\", {\n        className: inputClasses.join(' '),\n        value: props.value,\n        onChange: props.changed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this);\n      break;\n\n    default:\n      inputElement = /*#__PURE__*/_jsxDEV(\"input\", {\n        className: inputClasses.join(' '),\n        ...props.elementConfig,\n        value: props.value,\n        onChange: props.changed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 28\n      }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.Input,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: classes.label,\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), inputElement]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n\nexport default input;","map":{"version":3,"sources":["/Users/nitish/Desktop/rbac/React-app/rbac-front/src/Components/UI/Input/input.js"],"names":["React","classes","input","props","inputElement","inputClasses","InputElement","console","log","invalid","shouldValidate","touched","push","Invalid","elementType","join","elementConfig","value","changed","options","map","option","displayValue","Input","label"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport classes from './input.css';\n\nconst input = ( props ) => {\n    let inputElement = null;\n    const inputClasses = [classes.InputElement];\n    console.log('THIS IS PROPS',props)\n    if (props.invalid && props.shouldValidate && props.touched) {\n        inputClasses.push(classes.Invalid);\n    }\n\n    switch ( props.elementType ) {\n        case ( 'input' ):\n            inputElement = <input\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n            break;\n        case ( 'textarea' ):\n            inputElement = <textarea\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n            break;\n        case ( 'dropdown' ):\n            inputElement = (\n                <select\n                    className={inputClasses.join(' ')}\n                    value={props.value}\n                    onChange={props.changed}>\n                    {props.options.map(option => (\n                        <option key={option.value} value={option.value}>\n                            {option.displayValue}\n                        </option>\n                    ))}\n                </select>\n            );\n            break;\n        case('select-multiple'):\n        inputElement = (\n            <select\n                className={inputClasses.join(' ')}\n                value={props.value}\n                onChange={props.changed} multiple>\n                {props.options.map(option => (\n                    <option key={option.value} value={option.value}>\n                        {option.displayValue}\n                    </option>\n                ))}\n            </select>\n        );\n        break;\n        case('check-box'):\n        inputElement = (\n            <checkbox\n                className={inputClasses.join(' ')}\n                value={props.value}\n                onChange={props.changed}/>\n        );\n        break;\n        \n        default:\n            inputElement = <input\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n    }\n\n    return (\n        <div className={classes.Input}>\n            <label className={classes.label}>{props.label}</label>\n            {inputElement}\n        </div>\n    );\n\n};\n\nexport default input;"]},"metadata":{},"sourceType":"module"}